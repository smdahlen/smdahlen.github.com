<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Shawn Dahlen]]></title>
  <link href="http://smdahlen.github.com/atom.xml" rel="self"/>
  <link href="http://smdahlen.github.com/"/>
  <updated>2014-03-20T11:55:50-04:00</updated>
  <id>http://smdahlen.github.com/</id>
  <author>
    <name><![CDATA[Shawn Dahlen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[4dashes - the Web Client, Part 1]]></title>
    <link href="http://smdahlen.github.com/blog/2014/03/19/4dashes-the-web-client-part-1/"/>
    <updated>2014-03-19T14:28:37-04:00</updated>
    <id>http://smdahlen.github.com/blog/2014/03/19/4dashes-the-web-client-part-1</id>
    <content type="html"><![CDATA[<p>This is the third in a series of posts discussing the implementation of the
<a href="https://4dashes.com">4dashes</a> productivity tool. It covers the web services communication and
implementation of business logic within the <a href="http://angularjs.org">Angular-based</a> web application.
The post assumes the reader has a basic understanding of the Angular framework.</p>

<!-- more -->


<h2>Understanding Angular</h2>

<p>After a few months of using Angular to build 4dashes, it became
clear that Angular was a library for building a tailor-made framework
for your application. Consequently, there was more than
one way to implement a solution and guidance was marginal at best. At first
this was a struggle, but as I better understood the core concepts behind
Angular I crafted a set of guidelines that shaped my implementation and should
prove useful for new developers.</p>

<p>The big realization was that Angular, at its core, is a DOM compiler.
What I mean by that is it provides the mechanics to extend the HTML language
into your domain through custom elements and attributes. The net result is
declarative markup that represents a higher level abstraction of the interfaces
and their associated behavior in your application. This is paired with a
two-way data binding mechanism in which changes to your data model are
reflected in the DOM and vice-versa. In tandem with the DOM compiler and
two-way data binding, Angular provides a simple mechanism for dependency
injection. This enables us to structure our code into testable units that
depend upon one another with dependencies instantiated and resolved at runtime.
A set of primitives common to web applications is built on top of these
concepts and provided by the library.</p>

<h2>Communicating with the API</h2>

<p>Lets begin with the implementation responsible for communicating with the
server-side API discussed in the <a href="http://shawn.dahlen.me/blog/2014/03/17/4dashes-the-api/">previous post</a>. To keep it simple, I
started with Angular&rsquo;s <code>$http</code> service. This quickly grew into a custom
<code>resource</code> service resembling the optional <code>$resource</code> service provided by the
Angular team. I treaded down this path for two reasons: 1) support for PATCH
requests with automatic change tracking (similar to <a href="http://backbonejs.org/#Model-save">Backbone</a>), and 2)
support for offline use with data synchronization.</p>

<p>Unfortunately, time did not permit a clean implementation of either requirement
but I proceeded with my custom service anyway (if there is interest, I can
expand on the issues I ran into). As you will see below, the implementation was
small and straightforward while providing me a great understanding of Angular&rsquo;s
<code>$http</code> service and <em>promises</em> implementation.</p>

<p>The implementation aligned with my creation and update semantics (e.g.
conditional updates, creation with <code>PUT</code>), cached results for subsequent
fetches, transformed RFC8601 strings into dates, and provided an initialization
hook to modify the resource instance on creation.</p>

<figure class='code'><figcaption><span>app/components/api/api.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s1">&#39;api&#39;</span><span class="p">,</span> <span class="p">[])</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="s1">&#39;resource&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$http</span><span class="p">,</span> <span class="nx">$q</span><span class="p">,</span> <span class="nx">$cacheFactory</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">template</span><span class="p">,</span> <span class="nx">defaultParams</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">cache</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">template</span> <span class="o">=</span> <span class="nx">urltemplate</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">template</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">cache</span> <span class="o">=</span> <span class="nx">$cacheFactory</span><span class="p">(</span><span class="nx">template</span><span class="p">.</span><span class="nx">expand</span><span class="p">({}))</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">function</span> <span class="nx">Resource</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">self</span> <span class="o">=</span> <span class="k">this</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">regex</span> <span class="o">=</span> <span class="sr">/^(\d{4}|\+\d{6})(?:-(\d{2})(?:-(\d{2})(?:T(\d{2}):(\d{2}):(\d{2})\.(\d{1,})(Z|([\-+])(\d{2}):(\d{2}))?)?)?)?$/</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">match</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">this</span><span class="p">.</span><span class="nx">initialize</span><span class="p">()</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">self</span><span class="p">,</span> <span class="nx">data</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">self</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">value</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="c1">// transform iso 8601 strings into date objects</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">value</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">match</span> <span class="o">=</span> <span class="nx">regex</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span>
</span><span class='line'>                  <span class="k">if</span> <span class="p">(</span><span class="nx">match</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                      <span class="nx">self</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nb">Date</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">match</span><span class="p">[</span><span class="mi">0</span><span class="p">]))</span>
</span><span class='line'>                  <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">Resource</span><span class="p">.</span><span class="nx">create</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">resource</span><span class="p">,</span> <span class="nx">params</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">Resource</span><span class="p">.</span><span class="nx">url</span><span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="nx">resource</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">return</span> <span class="nx">$http</span><span class="p">({</span>
</span><span class='line'>              <span class="nx">method</span><span class="o">:</span> <span class="nx">template</span><span class="p">.</span><span class="nx">expand</span><span class="p">({})</span> <span class="o">===</span> <span class="nx">url</span> <span class="o">?</span> <span class="s1">&#39;POST&#39;</span> <span class="o">:</span> <span class="s1">&#39;PUT&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">url</span><span class="o">:</span> <span class="nx">url</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">data</span><span class="o">:</span> <span class="nx">resource</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>          <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">resource</span><span class="p">.</span><span class="nx">modified</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">headers</span><span class="p">(</span><span class="s1">&#39;last-modified&#39;</span><span class="p">))</span>
</span><span class='line'>              <span class="k">return</span> <span class="nx">resource</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">Resource</span><span class="p">.</span><span class="nx">fetch</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="nx">fresh</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">Resource</span><span class="p">.</span><span class="nx">url</span><span class="p">(</span><span class="nx">params</span><span class="p">)</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">result</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">fresh</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">result</span> <span class="o">=</span> <span class="nx">cache</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">$q</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">result</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">return</span> <span class="nx">$http</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">url</span><span class="p">).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">result</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>                  <span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">value</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                      <span class="nx">result</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">new</span> <span class="nx">Resource</span><span class="p">(</span><span class="nx">value</span><span class="p">))</span>
</span><span class='line'>                  <span class="p">})</span>
</span><span class='line'>              <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">result</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Resource</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">data</span><span class="p">)</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>              <span class="nx">cache</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="nx">url</span><span class="p">,</span> <span class="nx">result</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>              <span class="k">return</span> <span class="nx">result</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">Resource</span><span class="p">.</span><span class="nx">url</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">requestParams</span><span class="p">,</span> <span class="nx">resource</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">params</span> <span class="o">=</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span> <span class="nx">defaultParams</span><span class="p">,</span> <span class="nx">requestParams</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">value</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">value</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">params</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">value</span><span class="p">(</span><span class="nx">resource</span><span class="p">)</span>
</span><span class='line'>              <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="nx">value</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="o">===</span> <span class="s1">&#39;@&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">params</span><span class="p">[</span><span class="nx">key</span><span class="p">]</span> <span class="o">=</span> <span class="nx">resource</span> <span class="o">?</span> <span class="nx">resource</span><span class="p">[</span><span class="nx">value</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">)]</span> <span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">return</span> <span class="nx">template</span><span class="p">.</span><span class="nx">expand</span><span class="p">(</span><span class="nx">params</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">Resource</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">save</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">params</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">self</span> <span class="o">=</span> <span class="k">this</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="nx">Resource</span><span class="p">.</span><span class="nx">url</span><span class="p">(</span><span class="nx">params</span><span class="p">,</span> <span class="nx">self</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">return</span> <span class="nx">$http</span><span class="p">({</span>
</span><span class='line'>              <span class="nx">method</span><span class="o">:</span> <span class="s1">&#39;PUT&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">url</span><span class="o">:</span> <span class="nx">url</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">headers</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="s1">&#39;content-type&#39;</span><span class="o">:</span> <span class="s1">&#39;application/json&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s1">&#39;if-unmodified-since&#39;</span><span class="o">:</span> <span class="nx">self</span><span class="p">.</span><span class="nx">modified</span><span class="p">.</span><span class="nx">toString</span><span class="p">()</span>
</span><span class='line'>              <span class="p">},</span>
</span><span class='line'>              <span class="nx">data</span><span class="o">:</span> <span class="nx">self</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>          <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">self</span><span class="p">.</span><span class="nx">modified</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">headers</span><span class="p">(</span><span class="s1">&#39;last-modified&#39;</span><span class="p">))</span>
</span><span class='line'>              <span class="k">return</span> <span class="nx">self</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="nx">Resource</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>Similar to <code>$resource</code>, a concrete resource is defined by supplying a base URI
and template parameters (see <a href="http://tools.ietf.org/html/rfc6570">RFC 6570: URI Templates</a>). Here is how I
defined the concrete <code>Task</code> and <code>Summary</code> resources that communicates with
endpoints defined in the previous post:</p>

<figure class='code'><figcaption><span>app/components/api/api.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="s1">&#39;Task&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">resource</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">Task</span> <span class="o">=</span> <span class="nx">resource</span> <span class="p">(</span><span class="s1">&#39;/api/tasks{/id}&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;@id&#39;</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">Task</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="s1">&#39;Summary&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">resource</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">Summary</span> <span class="o">=</span> <span class="nx">resource</span><span class="p">(</span><span class="s1">&#39;/api/summaries{/year}{/month}{/day}&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">year</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">summary</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">format</span><span class="p">(</span><span class="nx">summary</span><span class="p">,</span> <span class="s1">&#39;YYYY&#39;</span><span class="p">)</span> <span class="p">},</span>
</span><span class='line'>      <span class="nx">month</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">summary</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">format</span><span class="p">(</span><span class="nx">summary</span><span class="p">,</span> <span class="s1">&#39;MM&#39;</span><span class="p">)</span> <span class="p">},</span>
</span><span class='line'>      <span class="nx">day</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">summary</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">format</span><span class="p">(</span><span class="nx">summary</span><span class="p">,</span> <span class="s1">&#39;DD&#39;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">Summary</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">format</span><span class="p">(</span><span class="nx">summary</span><span class="p">,</span> <span class="nx">token</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">summary</span> <span class="o">?</span> <span class="nx">moment</span><span class="p">(</span><span class="nx">summary</span><span class="p">.</span><span class="nx">day</span><span class="p">).</span><span class="nx">format</span><span class="p">(</span><span class="nx">token</span><span class="p">)</span> <span class="o">:</span> <span class="kc">null</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>This <code>Task</code> resource could now be used in the following manner:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// retrieves an array of incomplete tasks (GET /api/tasks)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">tasks</span> <span class="o">=</span> <span class="nx">Task</span><span class="p">.</span><span class="nx">fetch</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// modifies and saves the first task in the array (PUT /api/tasks/{id})</span>
</span><span class='line'><span class="nx">tasks</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">title</span> <span class="o">=</span> <span class="s1">&#39;new title&#39;</span>
</span><span class='line'><span class="nx">tasks</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">save</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// creates a new task and prints out modified date from server</span>
</span><span class='line'><span class="nx">Task</span><span class="p">.</span><span class="nx">create</span><span class="p">({</span> <span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;guid&#39;</span><span class="p">,</span> <span class="nx">title</span><span class="o">:</span> <span class="s1">&#39;new task&#39;</span> <span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">task</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">task</span><span class="p">.</span><span class="nx">modified</span><span class="p">)</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Organizing business logic</h2>

<p>Before discussing authentication with the API, let me build upon the <code>Task</code> and
<code>Summary</code> services defined above. Angular is the least prescriptive when it
comes to modelling and organizing your business (and persistence) logic. Most
beginner examples implement an application&rsquo;s logic directly within a
<code>Controller</code> and that may even include <code>$http</code> calls. However, as an
application grows, a controller&rsquo;s implementation will become unwieldy,
duplicative, and difficult to test. As such, the better approach is to move the
application logic into a set of services that your controllers can depend on.
This yields thin controllers with the single responsibilty of coordinating
between the view (directives, templates) and model (services).</p>

<p>To implement my business logic, I followed an active record like approach
defining methods on the <code>Task</code>, <code>Summary</code>, and <code>User</code> prototypes. Here is a
brief look at how behavior was added to <code>Task</code> for use by one of the
controllers:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="s1">&#39;Task&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">resource</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">Task</span> <span class="o">=</span> <span class="nx">resource</span> <span class="p">(</span><span class="s1">&#39;/api/tasks{/id}&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;@id&#39;</span> <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">Task</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">applyLabels</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">labels</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">self</span> <span class="o">=</span> <span class="k">this</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">added</span> <span class="o">=</span> <span class="kc">false</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">labels</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">newLabel</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">contains</span> <span class="o">=</span> <span class="nx">self</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">some</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">label</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="nx">label</span> <span class="o">===</span> <span class="nx">newLabel</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">contains</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">added</span> <span class="o">=</span> <span class="kc">true</span>
</span><span class='line'>              <span class="nx">self</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">newLabel</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="nx">added</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nx">Task</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">controller</span><span class="p">(</span><span class="s1">&#39;InventoryController&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$scope</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$scope</span><span class="p">.</span><span class="nx">applyLabels</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">labels</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">selectedTasks</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">task</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">task</span><span class="p">.</span><span class="nx">applyLabels</span><span class="p">(</span><span class="nx">labels</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">task</span><span class="p">.</span><span class="nx">save</span><span class="p">()</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">selectedTasks</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>In addition to implementing methods on the prototype object of the services, I
used virtual properties to derive values from the primary data within a
resource&rsquo;s document. This kept the payload as small as possible. To mitigate
the calculation cost, virtual properties were memozied (cached to return the
same value on subsequent calls). Here is a brief look at the <code>Summary</code>&rsquo;s
<code>initialize()</code> method that creates the virtual properties for an instance:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">Summary</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">initialize</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">self</span> <span class="o">=</span> <span class="k">this</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">self</span><span class="p">.</span><span class="nx">plannedTasks</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>  <span class="nx">self</span><span class="p">.</span><span class="nx">completedTasks</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>  <span class="nx">self</span><span class="p">.</span><span class="nx">dashes</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>  <span class="nx">self</span><span class="p">.</span><span class="nx">sets</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">self</span><span class="p">.</span><span class="nx">internalInterruptions</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="nx">self</span><span class="p">.</span><span class="nx">externalInterruptions</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>  <span class="nb">Object</span><span class="p">.</span><span class="nx">defineProperties</span><span class="p">(</span><span class="nx">self</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">plannedDashes</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">get</span><span class="o">:</span> <span class="nx">memoize</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">dashes</span><span class="p">.</span><span class="nx">reduce</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">sum</span><span class="p">,</span> <span class="nx">dash</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="k">return</span> <span class="nx">self</span><span class="p">.</span><span class="nx">isPlannedTask</span><span class="p">({</span> <span class="nx">id</span><span class="o">:</span> <span class="nx">dash</span><span class="p">.</span><span class="nx">id</span> <span class="p">})</span> <span class="o">?</span> <span class="o">++</span><span class="nx">sum</span> <span class="o">:</span> <span class="nx">sum</span>
</span><span class='line'>              <span class="p">},</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>          <span class="p">},</span> <span class="nx">self</span><span class="p">.</span><span class="nx">hashKey</span><span class="p">)</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="p">...</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Handling authentication</h2>

<p>In the previous <a href="http://shawn.dahlen.me/blog/2014/03/17/4dashes-the-api/">post</a>, I discussed the token-based authentication mechanism
used by the API. To submit a request, a client must supply a valid signed token
within a HTTP header. A valid token can be retrieved by <code>POST</code>ing a request to
<code>/api/token</code> with an email address and plaintext password. To support this, I
implemented a <code>token</code> service responsible for authentication and persistence of
the token and a an <code>$http</code> <a href="http://docs.angularjs.org/api/ng/service/$http">interceptor</a> to inject the token into API
requests.</p>

<p>Below is the implementation of the <code>token</code> service. There is a few things to
note: 1) the service provides a method to <code>authenticate</code> a user&rsquo;s credentials
used by the login form, 2) the token is set and retrieved via a virtual
property and persisted to <code>localStorage</code>, and 3) a timeout is scheduled to fire
two minutes before the token expires and when it does expire &mdash; both
broadcasting an event for interested listeners.</p>

<figure class='code'><figcaption><span>app/components/api/api.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="s1">&#39;token&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$window</span><span class="p">,</span> <span class="nx">$timeout</span><span class="p">,</span> <span class="nx">$injector</span><span class="p">,</span> <span class="nx">$rootScope</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">$window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s1">&#39;token&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">expire</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">token</span><span class="p">)</span> <span class="p">{</span> <span class="nx">startTokenTimeout</span><span class="p">()</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">create</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">isValid</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">token</span> <span class="o">?</span> <span class="kc">true</span> <span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">authenticate</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">email</span><span class="p">,</span> <span class="nx">password</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">$injector</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;$http&#39;</span><span class="p">).</span><span class="nx">post</span><span class="p">(</span><span class="s1">&#39;/api/token&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">email</span><span class="o">:</span> <span class="nx">email</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">password</span><span class="o">:</span> <span class="nx">password</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="p">{</span>
</span><span class='line'>      <span class="nx">value</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">get</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">token</span> <span class="p">},</span>
</span><span class='line'>          <span class="nx">set</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">newToken</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">token</span> <span class="o">=</span> <span class="nx">newToken</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="nx">token</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">$window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s1">&#39;token&#39;</span><span class="p">,</span> <span class="nx">token</span><span class="p">)</span>
</span><span class='line'>                  <span class="nx">startTokenTimeout</span><span class="p">()</span>
</span><span class='line'>              <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">$window</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="s1">&#39;token&#39;</span><span class="p">)</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">startTokenTimeout</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// clear old timeout</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">expire</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">$timeout</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">expire</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// parse time remaining minus two minute buffer</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">timeRemaining</span> <span class="o">=</span> <span class="nx">token</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span> <span class="o">-</span> <span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">1000</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">timeRemaining</span> <span class="o">&lt;=</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">token</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>          <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s1">&#39;tokenExpired&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">expire</span> <span class="o">=</span> <span class="nx">$timeout</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span>  <span class="p">{</span>
</span><span class='line'>              <span class="c1">// alert listeners that token will expire in one minute</span>
</span><span class='line'>              <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s1">&#39;tokenWillExpire&#39;</span><span class="p">)</span>
</span><span class='line'>              <span class="nx">expire</span> <span class="o">=</span> <span class="nx">$timeout</span><span class="p">(</span><span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">token</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>                  <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">$broadcast</span><span class="p">(</span><span class="s1">&#39;tokenExpired&#39;</span><span class="p">)</span>
</span><span class='line'>              <span class="p">},</span> <span class="mi">60</span><span class="o">*</span><span class="mi">1000</span><span class="p">)</span>
</span><span class='line'>          <span class="p">},</span> <span class="nx">timeRemaining</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>The <code>tokenInterceptor</code> service intercepts <code>$http</code> requests and for API calls
injects a header with a token retrieved from the <code>token</code> service. It also
intercepts the response to retrieve the new token and persist it with the
<code>token</code> service for later use. Below is the implementation of the
<code>tokenInterceptor</code> service and the associated code to configure it:</p>

<figure class='code'><figcaption><span>app/components/api/api.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">.</span><span class="nx">factory</span><span class="p">(</span><span class="s1">&#39;tokenInterceptor&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$q</span><span class="p">,</span> <span class="nx">token</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">TOKEN_HEADER</span> <span class="o">=</span> <span class="s1">&#39;x-access-token&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">request</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">config</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="sr">/api/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">config</span><span class="p">.</span><span class="nx">url</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">config</span><span class="p">.</span><span class="nx">headers</span><span class="p">[</span><span class="nx">TOKEN_HEADER</span><span class="p">]</span> <span class="o">=</span> <span class="nx">token</span><span class="p">.</span><span class="nx">value</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">config</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">response</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="sr">/api/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">config</span><span class="p">.</span><span class="nx">url</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">token</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">headers</span><span class="p">(</span><span class="nx">TOKEN_HEADER</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">response</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">responseError</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">status</span> <span class="o">===</span> <span class="mi">401</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">token</span><span class="p">.</span><span class="nx">value</span> <span class="o">=</span> <span class="kc">null</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">$q</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">response</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="p">.</span><span class="nx">config</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$httpProvider</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$httpProvider</span><span class="p">.</span><span class="nx">interceptors</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39;tokenInterceptor&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>On startup, the application is configured to listen for the <code>$routeChangeStart</code>
event. When a user navigates to a route for the first time or changes to a new
one, the application checks if the route is restricted and if the token is
invalid. If both are true, the user is redirected to the login view. Below is a
snippet of code highlighting the configuration of a restricted route (note the
<code>restricted</code> property) and the associated logic for login redirection:</p>

<figure class='code'><figcaption><span>app/app.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// configure app routes</span>
</span><span class='line'><span class="p">.</span><span class="nx">config</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$routeProvider</span><span class="p">,</span> <span class="nx">$locationProvider</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$routeProvider</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="s1">&#39;/today&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s1">&#39;template/today/today.html&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">controller</span><span class="o">:</span> <span class="s1">&#39;TodayController&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">restricted</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">resolve</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">user</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">User</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">User</span><span class="p">.</span><span class="nx">fetch</span><span class="p">()</span> <span class="p">},</span>
</span><span class='line'>          <span class="nx">tasks</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">Task</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">Task</span><span class="p">.</span><span class="nx">fetch</span><span class="p">()</span> <span class="p">},</span>
</span><span class='line'>          <span class="nx">summaries</span><span class="o">:</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">Summary</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">Summary</span><span class="p">.</span><span class="nx">fetch</span><span class="p">()</span> <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="s1">&#39;/login&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">templateUrl</span><span class="o">:</span> <span class="s1">&#39;template/login/login.html&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">controller</span><span class="o">:</span> <span class="s1">&#39;LoginController&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="nx">restricted</span><span class="o">:</span> <span class="kc">false</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// initialize the app on startup</span>
</span><span class='line'><span class="p">.</span><span class="nx">run</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$rootScope</span><span class="p">,</span> <span class="nx">$location</span><span class="p">,</span> <span class="nx">token</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="c1">// listen for a route change and redirect to /login if a valid token</span>
</span><span class='line'>  <span class="c1">// is not present</span>
</span><span class='line'>  <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s1">&#39;$routeChangeStart&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">event</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">next</span><span class="p">.</span><span class="nx">restricted</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="nx">token</span><span class="p">.</span><span class="nx">isValid</span><span class="p">())</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">$location</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="s1">&#39;/login&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// listen for token expiration and redirect to /login</span>
</span><span class='line'>  <span class="nx">$rootScope</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s1">&#39;tokenExpired&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">event</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$location</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="s1">&#39;/login&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>With the discussion regarding API communication and business logic complete,
the next post will cover the user interface implmentation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[4dashes - the API]]></title>
    <link href="http://smdahlen.github.com/blog/2014/03/17/4dashes-the-api/"/>
    <updated>2014-03-17T12:02:55-04:00</updated>
    <id>http://smdahlen.github.com/blog/2014/03/17/4dashes-the-api</id>
    <content type="html"><![CDATA[<p>This is the second in a series of posts discussing the implementation of the
<a href="https://4dashes.com">4dashes</a> productivity tool. It covers the server-side API implementation
for HTTP web services built on <a href="http://nodejs.org">Node.js</a> and <a href="http://expressjs.com">Express</a>. It is an in-depth
continuation of the devops discussion for deploying a <a href="http://shawn.dahlen.me/blog/2013/03/18/setup-node-dot-js-servers-within-a-load-balanced-configuration/">load-balanced
configuration</a>.</p>

<!-- more -->


<p>4dashes is implemented as an Express application. The main application, defined
in <em>server.js</em>, loads configuration, configures logging, and detects
unsupported user agents. It delegates the remaining functionality to mounted
sub-applications. Specifically, one serves static assets that comprise the
client-side Angular application (SSL and caching is offloaded to a reverse
proxy) while the other handles API requests. Below is stripped down version of
<em>server.js</em> highlighting configuration loaded for the API sub-application and
the mounting of the two apps:</p>

<figure class='code'><figcaption><span>server.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;express&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">()</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">Log</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;log&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">api</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./lib/api&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">assets</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./lib/assets&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// define setting for log level</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;log level&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DASHES_LOG_LEVEL</span> <span class="o">||</span> <span class="nx">Log</span><span class="p">.</span><span class="nx">DEBUG</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// define setting for port to bind application to</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;port&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DASHES_PORT</span> <span class="o">||</span> <span class="mi">8080</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// define setting for 256 bit token key (base64 encoding)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">key</span> <span class="o">=</span> <span class="s1">&#39;5zgIDUlloyybplQZtkTzbwoZJusp+SLJj8vjBjqiCh8=&#39;</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;token key&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DASHES_TOKEN_KEY</span> <span class="o">||</span> <span class="nx">key</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// define setting for max age of token</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;token age&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DASHES_TOKEN_AGE</span> <span class="o">||</span> <span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">1000</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// define setting for mongodb database name</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;db name&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DASHES_DB_NAME</span> <span class="o">||</span> <span class="s1">&#39;4dashes&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// define setting for mongodb hosts</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;db hosts&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">DASHES_DB_HOSTS</span> <span class="o">||</span> <span class="s1">&#39;localhost&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// configure default logger</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">logger</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Log</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;log level&#39;</span><span class="p">))</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">req</span><span class="p">.</span><span class="nx">log</span> <span class="o">=</span> <span class="nx">logger</span>
</span><span class='line'>  <span class="nx">next</span><span class="p">()</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// log all requests if log level is INFO or higher using log module format</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;log level&#39;</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="nx">Log</span><span class="p">.</span><span class="nx">INFO</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">format</span> <span class="o">=</span> <span class="s1">&#39;[:date] INFO :remote-addr - :method :url &#39;</span> <span class="o">+</span>
</span><span class='line'>      <span class="s1">&#39;:status :res[content-length] - :response-time ms&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">express</span><span class="p">.</span><span class="nx">logger</span><span class="p">.</span><span class="nx">token</span><span class="p">(</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span> <span class="p">})</span>
</span><span class='line'>  <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">logger</span><span class="p">(</span><span class="nx">format</span><span class="p">))</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// mount assets and api sub-applications</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/api&#39;</span><span class="p">,</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./lib/api&#39;</span><span class="p">))</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./lib/assets&#39;</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;port&#39;</span><span class="p">))</span>
</span></code></pre></td></tr></table></div></figure>


<p>The file, <em>api.js</em>, defines the Express application responsible for handling
api requests. It is itself comprised of sub-applications that handle requests
for the three core resources: users, tasks, and summaries.</p>

<figure class='code'><figcaption><span>api.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;express&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">()</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">db</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./db&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">auth</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./auth&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">users</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./users&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">tasks</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./tasks&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">summaries</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./summaries&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// establish database connection</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">db</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// parse request body based on content type</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">bodyParser</span><span class="p">())</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// define setting for token validation</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;validate&#39;</span><span class="p">,</span> <span class="nx">auth</span><span class="p">.</span><span class="nx">validate</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// mount resources</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/token&#39;</span><span class="p">,</span> <span class="nx">auth</span><span class="p">)</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/users&#39;</span><span class="p">,</span> <span class="nx">users</span><span class="p">)</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/tasks&#39;</span><span class="p">,</span> <span class="nx">tasks</span><span class="p">)</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/summaries&#39;</span><span class="p">,</span> <span class="nx">summaries</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// handle errors</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">req</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="nx">err</span><span class="p">.</span><span class="nx">message</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">500</span><span class="p">)</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>In addition to configuring middleware for parsing JSON request payloads and
converting internal errors into a 500 response code, the api application
imports and uses a database middleware function. This function checks if a
database connection (to a replica set) is established, and if not, attempts to
connect for use in the request pipeline. This approach allowed the startup
order of the application and database servers to be decoupled. The
<a href="http://mongoosejs.com">Mongoose</a> library is used to communicate with <a href="http://mongodb.org">MongoDb</a>.</p>

<figure class='code'><figcaption><span>db.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">mongoose</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;mongoose&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">hosts</span> <span class="o">=</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">hosts</span> <span class="o">===</span> <span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">hosts</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;db hosts&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">hosts</span> <span class="o">=</span> <span class="nx">hosts</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\s+/g</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39; &#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">hosts</span> <span class="o">=</span> <span class="nx">hosts</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">host</span><span class="p">,</span> <span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="s1">&#39;mongodb://&#39;</span> <span class="o">+</span> <span class="nx">host</span> <span class="o">+</span> <span class="s1">&#39;/&#39;</span> <span class="o">+</span> <span class="nx">req</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;db name&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">mongoose</span><span class="p">.</span><span class="nx">connection</span><span class="p">.</span><span class="nx">readyState</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">mongoose</span><span class="p">.</span><span class="nx">connection</span><span class="p">.</span><span class="nx">once</span><span class="p">(</span><span class="s1">&#39;error&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>      <span class="nx">mongoose</span><span class="p">.</span><span class="nx">connect</span><span class="p">(</span><span class="nx">hosts</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">next</span><span class="p">()</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To authenticate and authorize requests, a simple token-based approach was
implemented. Upon successful authentication against the <code>/api/token</code> endpoint,
a signed token is returned in a response header containing the user&rsquo;s id and
expiration timestamp. Subsequent API requests are authenticated by the token
passed within a request header and authorized by confirming the user&rsquo;s
ownership of a resource. A new token is returned in each API response extending
the expiration window. To mitigate against session hijacking, all communication
is encrypted with SSL.</p>

<p>The file, <em>auth.js</em>, implements the <code>/api/token</code> endpoint. Additionally, it
exports (as a property of the Express application) a <code>validate</code> middleware
function that is leveraged by the other API sub-applications.</p>

<figure class='code'><figcaption><span>auth.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;express&#39;</span><span class="p">)()</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">crypto</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;crypto&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">User</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./models/user&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">TOKEN_HEADER</span> <span class="o">=</span> <span class="nx">app</span><span class="p">.</span><span class="nx">TOKEN_HEADER</span> <span class="o">=</span> <span class="s1">&#39;x-access-token&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// authenticate user credentials in exchange for an access token</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">post</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">key</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;token key&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">age</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;token age&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">User</span><span class="p">.</span><span class="nx">authenticate</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">email</span><span class="p">,</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">password</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">generateToken</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span> <span class="o">+</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">req</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">info</span><span class="p">(</span><span class="s1">&#39;token generated for %s&#39;</span><span class="p">,</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">email</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">res</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">TOKEN_HEADER</span><span class="p">,</span> <span class="nx">token</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">204</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">401</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// validate signed access token included in request header</span>
</span><span class='line'><span class="c1">// TODO improve logging for fail2ban processing</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">validate</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">token</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">TOKEN_HEADER</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">key</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;token key&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">age</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;token age&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">contents</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">token</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">contents</span> <span class="o">=</span> <span class="nx">token</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">contents</span><span class="p">.</span><span class="nx">length</span> <span class="o">!==</span> <span class="mi">3</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">401</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="nx">User</span><span class="p">.</span><span class="nx">findById</span><span class="p">(</span><span class="nx">contents</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">req</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">warning</span><span class="p">(</span><span class="s1">&#39;token received with invalid user id: %s&#39;</span><span class="p">,</span> <span class="nx">contents</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>              <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">401</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">validTimestamp</span><span class="p">(</span><span class="nx">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">req</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">debug</span><span class="p">(</span><span class="s1">&#39;token received with expired timestamp&#39;</span><span class="p">)</span>
</span><span class='line'>              <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">401</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">validSignature</span><span class="p">(</span><span class="nx">contents</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">req</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">warning</span><span class="p">(</span><span class="s1">&#39;token received with invalid signature: %s&#39;</span><span class="p">,</span> <span class="nx">token</span><span class="p">)</span>
</span><span class='line'>              <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">401</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">req</span><span class="p">.</span><span class="nx">user</span> <span class="o">=</span> <span class="nx">user</span>
</span><span class='line'>              <span class="nx">res</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="nx">TOKEN_HEADER</span><span class="p">,</span> <span class="nx">generateToken</span><span class="p">(</span><span class="nx">user</span><span class="p">.</span><span class="nx">id</span><span class="p">,</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span> <span class="o">+</span> <span class="nx">age</span><span class="p">,</span> <span class="nx">key</span><span class="p">))</span>
</span><span class='line'>              <span class="nx">next</span><span class="p">()</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">req</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">warning</span><span class="p">(</span><span class="s1">&#39;token not received for %s&#39;</span><span class="p">,</span> <span class="nx">req</span><span class="p">.</span><span class="nx">originalUrl</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">401</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">validTimestamp</span><span class="p">(</span><span class="nx">timestamp</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">timestamp</span> <span class="o">-</span> <span class="nb">Date</span><span class="p">.</span><span class="nx">now</span><span class="p">()</span> <span class="o">&gt;=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">validSignature</span><span class="p">(</span><span class="nx">contents</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">generateToken</span><span class="p">(</span><span class="nx">contents</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="nx">contents</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="nx">key</span><span class="p">)</span>  <span class="o">===</span> <span class="nx">contents</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;:&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// generate signed access token with user id and timestamp</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">generateToken</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">timestamp</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">content</span> <span class="o">=</span> <span class="nx">id</span> <span class="o">+</span> <span class="s1">&#39;:&#39;</span> <span class="o">+</span> <span class="nx">timestamp</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">content</span> <span class="o">+</span> <span class="s1">&#39;:&#39;</span> <span class="o">+</span> <span class="nx">crypto</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">createHmac</span><span class="p">(</span><span class="s1">&#39;sha256&#39;</span><span class="p">,</span> <span class="k">new</span> <span class="nx">Buffer</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="s1">&#39;base64&#39;</span><span class="p">))</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">content</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">digest</span><span class="p">(</span><span class="s1">&#39;base64&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>The file, <em>user.js</em>, implements the <code>User</code> model that defines the
<code>authenticate</code> method used by the <code>/api/token</code> endpoint. A user&rsquo;s email address
and plaintext password submitted to the endpoint is checked against the salted
hash stored within the database. A partial implementation of the <code>User</code> model
is shown below highlighting the salted password hashing:</p>

<figure class='code'><figcaption><span>user.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">mongoose</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;mongoose&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">crypto</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;crypto&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">SALTLEN</span> <span class="o">=</span> <span class="mi">32</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">KEYLEN</span> <span class="o">=</span> <span class="mi">512</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">ITERATIONS</span> <span class="o">=</span> <span class="mi">10000</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">schema</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">mongoose</span><span class="p">.</span><span class="nx">Schema</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">hash</span><span class="o">:</span> <span class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="nb">String</span><span class="p">,</span> <span class="nx">required</span><span class="o">:</span> <span class="kc">true</span> <span class="p">},</span>
</span><span class='line'>  <span class="nx">salt</span><span class="o">:</span> <span class="p">{</span> <span class="nx">type</span><span class="o">:</span> <span class="nb">String</span><span class="p">,</span> <span class="nx">required</span><span class="o">:</span> <span class="kc">true</span> <span class="p">},</span>
</span><span class='line'>  <span class="p">...</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="nx">schema</span><span class="p">.</span><span class="nx">methods</span><span class="p">.</span><span class="nx">setPassword</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">plaintext</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">self</span> <span class="o">=</span> <span class="k">this</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">crypto</span><span class="p">.</span><span class="nx">randomBytes</span><span class="p">(</span><span class="nx">SALTLEN</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">buf</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">salt</span> <span class="o">=</span> <span class="nx">buf</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="s1">&#39;base64&#39;</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">crypto</span><span class="p">.</span><span class="nx">pbkdf2</span><span class="p">(</span><span class="nx">plaintext</span><span class="p">,</span> <span class="nx">salt</span><span class="p">,</span> <span class="nx">ITERATIONS</span><span class="p">,</span> <span class="nx">KEYLEN</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">self</span><span class="p">.</span><span class="nx">salt</span> <span class="o">=</span> <span class="nx">salt</span>
</span><span class='line'>          <span class="nx">self</span><span class="p">.</span><span class="nx">hash</span> <span class="o">=</span> <span class="nx">key</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="s1">&#39;base64&#39;</span><span class="p">)</span>
</span><span class='line'>          <span class="nx">callback</span><span class="p">()</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">schema</span><span class="p">.</span><span class="nx">statics</span><span class="p">.</span><span class="nx">authenticate</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">email</span><span class="p">,</span> <span class="nx">plaintext</span><span class="p">,</span> <span class="nx">callback</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">findByEmail</span><span class="p">(</span><span class="nx">email</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="kc">null</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">user</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">crypto</span><span class="p">.</span><span class="nx">pbkdf2</span><span class="p">(</span><span class="nx">plaintext</span><span class="p">,</span> <span class="nx">user</span><span class="p">.</span><span class="nx">salt</span><span class="p">,</span> <span class="nx">ITERATIONS</span><span class="p">,</span> <span class="nx">KEYLEN</span><span class="p">,</span> <span class="nx">onComplete</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">callback</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="kc">null</span><span class="p">)</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">function</span> <span class="nx">onComplete</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="nx">callback</span><span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="kc">null</span><span class="p">)</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">user</span><span class="p">.</span><span class="nx">hash</span> <span class="o">===</span> <span class="nx">key</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="s1">&#39;base64&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">callback</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="nx">user</span><span class="p">.</span><span class="nx">id</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">callback</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span> <span class="kc">null</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">mongoose</span><span class="p">.</span><span class="nx">model</span><span class="p">(</span><span class="s1">&#39;User&#39;</span><span class="p">,</span> <span class="nx">schema</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>All three resource types follow a similar implementation pattern. Endpoints are
defined and exported as an Express application. The <code>validate</code> middleware is
looked up and used to authenticate requests (in the context of the task
resource shown below, all endpoints are authenticated). In support for the
offline mobile use case, new resources are created with a <code>PUT</code> request based
on a globally unique identifer created by a client. Additionally, the
<code>If-Unmodified-Since</code> conditional header is used to detect potential conflicts
that would arise from use by multiple clients (e.g. mobile and web). Finally,
the <code>PATCH</code> method is implemented using JSON Patch (<a href="http://mongodb.org">RPC 6902</a>) to optimize
client requests to modify a resource.</p>

<p>The <em>tasks.js</em> file below is representative of the implementation approach for
all resource endpoints:</p>

<figure class='code'><figcaption><span>tasks.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">app</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;express&#39;</span><span class="p">)()</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">jsonpatch</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;json-patch&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">Task</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./models/task&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// validate all requests have an access token</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">all</span><span class="p">(</span><span class="s1">&#39;*&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">validate</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;validate&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="nx">validate</span><span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// return all incomplete tasks for a user</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">modifiedSince</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">query</span><span class="p">[</span><span class="s1">&#39;modified-since&#39;</span><span class="p">])</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">modifiedSince</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">query</span><span class="p">[</span><span class="s1">&#39;modified-since&#39;</span><span class="p">])</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// return incomplete tasks modified since the specified date</span>
</span><span class='line'>  <span class="nx">Task</span><span class="p">.</span><span class="nx">findByIncomplete</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">user</span><span class="p">,</span> <span class="nx">modifiedSince</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">tasks</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="nx">tasks</span><span class="p">)</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// lookup a task based on the id within the uri</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">param</span><span class="p">(</span><span class="s1">&#39;id&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">,</span> <span class="nx">id</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">Task</span><span class="p">.</span><span class="nx">findById</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">,</span> <span class="nx">task</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">task</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">method</span> <span class="o">===</span> <span class="s1">&#39;PUT&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">next</span><span class="p">()</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">404</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// check that the requesting user is authorized</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">task</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">id</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">req</span><span class="p">.</span><span class="nx">task</span> <span class="o">=</span> <span class="nx">task</span>
</span><span class='line'>              <span class="nx">next</span><span class="p">()</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">403</span><span class="p">)</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// return the task with the specified id</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/:id&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">res</span><span class="p">.</span><span class="nx">json</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">task</span><span class="p">)</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// create or replace a task with the specified id</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s1">&#39;/:id&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">unmodifiedSince</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;if-unmodified-since&#39;</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// create new task</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">req</span><span class="p">.</span><span class="nx">task</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">unmodifiedSince</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">404</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">_id</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">params</span><span class="p">.</span><span class="nx">id</span>
</span><span class='line'>      <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">user</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">id</span>
</span><span class='line'>      <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">modified</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">Task</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">400</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>          <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">201</span><span class="p">)</span>
</span><span class='line'>          <span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;last-modified&#39;</span><span class="p">,</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">modified</span><span class="p">)</span>
</span><span class='line'>          <span class="p">.</span><span class="nx">send</span><span class="p">()</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">// update existing task if conditional is provided</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">unmodifiedSince</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">428</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">isModified</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">task</span><span class="p">,</span> <span class="nx">unmodifiedSince</span><span class="p">))</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">412</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">task</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Task</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">task</span><span class="p">.</span><span class="nx">validate</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">400</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>          <span class="k">delete</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">_id</span>
</span><span class='line'>          <span class="k">delete</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">user</span>
</span><span class='line'>          <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">modified</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
</span><span class='line'>          <span class="nx">Task</span><span class="p">.</span><span class="nx">update</span><span class="p">({</span> <span class="nx">_id</span><span class="o">:</span> <span class="nx">req</span><span class="p">.</span><span class="nx">task</span><span class="p">.</span><span class="nx">id</span> <span class="p">},</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>              <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">204</span><span class="p">)</span>
</span><span class='line'>              <span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;last-modified&#39;</span><span class="p">,</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">modified</span><span class="p">)</span>
</span><span class='line'>              <span class="p">.</span><span class="nx">send</span><span class="p">()</span>
</span><span class='line'>          <span class="p">})</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// update a task with partial JSON data based on RFC 6902</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">patch</span><span class="p">(</span><span class="s1">&#39;/:id&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">unmodifiedSince</span> <span class="o">=</span> <span class="nx">req</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;if-unmodified-since&#39;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">req</span><span class="p">.</span><span class="nx">is</span><span class="p">(</span><span class="s1">&#39;application/json-patch+json&#39;</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">415</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">unmodifiedSince</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">428</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">isModified</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">task</span><span class="p">,</span> <span class="nx">unmodifiedSince</span><span class="p">))</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">412</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">jsonpatch</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">req</span><span class="p">.</span><span class="nx">task</span><span class="p">,</span> <span class="nx">req</span><span class="p">.</span><span class="nx">body</span><span class="p">)</span>
</span><span class='line'>      <span class="nx">req</span><span class="p">.</span><span class="nx">task</span><span class="p">.</span><span class="nx">modified</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">()</span>
</span><span class='line'>      <span class="nx">req</span><span class="p">.</span><span class="nx">task</span><span class="p">.</span><span class="nx">save</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">next</span><span class="p">(</span><span class="nx">err</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'>          <span class="nx">res</span><span class="p">.</span><span class="nx">status</span><span class="p">(</span><span class="mi">204</span><span class="p">)</span>
</span><span class='line'>          <span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;last-modified&#39;</span><span class="p">,</span> <span class="nx">req</span><span class="p">.</span><span class="nx">task</span><span class="p">.</span><span class="nx">modified</span><span class="p">)</span>
</span><span class='line'>          <span class="p">.</span><span class="nx">send</span><span class="p">()</span>
</span><span class='line'>      <span class="p">})</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="mi">400</span><span class="p">)</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// compare dates stripping milliseconds </span>
</span><span class='line'><span class="kd">function</span> <span class="nx">isModified</span><span class="p">(</span><span class="nx">task</span><span class="p">,</span> <span class="nx">unmodifiedSince</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">modified</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">task</span><span class="p">.</span><span class="nx">modified</span><span class="p">).</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">modified</span> <span class="o">&gt;</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">unmodifiedSince</span><span class="p">)</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="nx">app</span>
</span></code></pre></td></tr></table></div></figure>


<p>After the implementation of all resource endpoints, it was clear that much of
the logic could be abstracted if time had permitted. Ideally, I would have been
interested in exploring a declarative approach to endpoints with a more robust framework for supporting data syncronization across clients.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[4dashes - the Build System]]></title>
    <link href="http://smdahlen.github.com/blog/2014/03/13/4dashes-the-build-system/"/>
    <updated>2014-03-13T13:47:12-04:00</updated>
    <id>http://smdahlen.github.com/blog/2014/03/13/4dashes-the-build-system</id>
    <content type="html"><![CDATA[<p>This is the first in a series of posts discussing the implementation of the
<a href="https://4dashes.com">4dashes</a> productivity tool. It covers the project structure and build
system supporting a rapid developer workflow and creation of production assets.
It is a continuation on the groundwork discussed <a href="http://shawn.dahlen.me/blog/2013/03/18/setup-node-dot-js-servers-within-a-load-balanced-configuration/">here</a> representing the
state of the product at launch.</p>

<!-- more -->


<p>4dashes is a web-based product built on <a href="http://nodejs.org">Node.js</a> and <a href="http://angularjs.org">Angular</a>
(deviating from the earlier setup using Backbone). Like many Node.js projects
nowadays, the build system is based on <a href="http://gruntjs.com">Grunt</a>. Before discussing the
<em>Gruntfile</em> mechanics, its beneficial to understand the project file structure.
Here is the top-level:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>4dashes/
</span><span class='line'>  app/
</span><span class='line'>  lib/
</span><span class='line'>  test/
</span><span class='line'>  public/
</span><span class='line'>  Gruntfile.js
</span><span class='line'>  package.json
</span><span class='line'>  server.js</span></code></pre></td></tr></table></div></figure>


<p>The <em>server.js</em> file loads configuration, sets up logging, and mounts RESTful
endpoints defined within modules in the <em>lib/</em> directory. The details of this
will be discussed in a future article. The <em>app/</em> directory contains the
client-side assets that comprise the Angular-based web application and which
are ultimately built to the <em>public/</em> directory to serve for production.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>4dashes/
</span><span class='line'>  app/
</span><span class='line'>      components/
</span><span class='line'>          timer/
</span><span class='line'>              timer.html
</span><span class='line'>              timer.less
</span><span class='line'>              timer.js
</span><span class='line'>          charts/
</span><span class='line'>          task-list/
</span><span class='line'>          ...
</span><span class='line'>      images/
</span><span class='line'>      fonts/
</span><span class='line'>          icons.woff
</span><span class='line'>      index.html
</span><span class='line'>      app.html
</span><span class='line'>      app.less
</span><span class='line'>      app.js</span></code></pre></td></tr></table></div></figure>


<p>Unlike other Angular projects, 4dashes was organized around the functional
components that comprise the application (similar to what was recently
<a href="https://docs.google.com/document/d/1XXMvReO8-Awi1EZXAXS4PzDzdNvV6pGcuaF4Q9821Es/pub">proposed</a> by the Angular team.) This approach aligns well with the
upcoming <a href="https://developers.google.com/events/io/sessions/318907648">web components</a> technology. Each component is contained within
its own directory with a file for template markup, styles, and script. The
<em>app.*</em> files represent the entry point for the application and dynamically
reference files for each component. When a new component is created
(or removed), the build system updates the appropriate references. This is
accomplished with the <a href="https://github.com/rrharvey/grunt-file-blocks">grunt-file-blocks</a> plugin.</p>

<p>The plugin works by updating replacement blocks within a source file with
references based on file matching patterns. <em>app.html</em> contains replacement
blocks for third-party dependencies and component scripts:</p>

<figure class='code'><figcaption><span>app.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;html&gt;</span>
</span><span class='line'>  <span class="nt">&lt;body&gt;</span>
</span><span class='line'>      <span class="nt">&lt;header&gt;</span>...<span class="nt">&lt;/header&gt;</span>
</span><span class='line'>      <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;content&quot;</span> <span class="na">ng-view</span><span class="nt">&gt;&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;footer&gt;</span>...<span class="nt">&lt;/footer&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c">&lt;!-- build:js app.js --&gt;</span>
</span><span class='line'>      <span class="c">&lt;!-- fileblock:js dependencies --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/angular/angular.min.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>      <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;bower_components/moment/moment.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>      ...
</span><span class='line'>      <span class="c">&lt;!-- endfileblock --&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="c">&lt;!-- fileblock:js components --&gt;</span>
</span><span class='line'>      <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;components/api/api.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>      <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;components/avatar/avatar.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>      <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;components/timer/timer.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>      <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;components/templates.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>      ...
</span><span class='line'>      <span class="c">&lt;!-- endfileblock --&gt;</span>
</span><span class='line'>
</span><span class='line'>      <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;app.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'>    <span class="c">&lt;!-- endbuild --&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>app.less</em> follows the same pattern replacing a comment block with <code>@import</code>
statements for components styles:</p>

<figure class='code'><figcaption><span>app.less </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">//</span> <span class="nt">import</span> <span class="nt">base</span> <span class="nt">bootstrap</span> <span class="nt">styles</span>
</span><span class='line'><span class="k">@import</span> <span class="s1">&#39;bower_components/bootstrap/less/bootstrap.less&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">//</span> <span class="nt">define</span> <span class="nt">color</span> <span class="nt">palette</span>
</span><span class='line'><span class="k">@base-color</span><span class="o">:</span> <span class="nt">hsl</span><span class="o">(</span><span class="nt">45</span><span class="o">,</span> <span class="nt">15</span><span class="o">%,</span> <span class="nt">99</span><span class="o">%)</span><span class="p">;</span>
</span><span class='line'><span class="k">@base-dark-color</span><span class="o">:</span> <span class="nt">hsl</span><span class="o">(</span><span class="nt">45</span><span class="o">,</span> <span class="nt">15</span><span class="o">%,</span> <span class="nt">89</span><span class="o">%)</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="o">//</span> <span class="nt">additional</span> <span class="nt">common</span> <span class="nt">styles</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* fileblock:less components */</span>
</span><span class='line'><span class="k">@import</span> <span class="s1">&#39;components/avatar/avatar.less&#39;</span><span class="p">;</span>
</span><span class='line'><span class="k">@import</span> <span class="s1">&#39;components/timer/timer.less&#39;</span><span class="p">;</span>
</span><span class='line'><span class="o">...</span>
</span><span class='line'><span class="c">/* endfileblock */</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, component template markup is pre-processed and compiled into a single
<em>templates.js</em> file using the <a href="https://github.com/ericclemmons/grunt-angular-templates">grunt-angular-templates</a> plugin. While this
wasn&rsquo;t technical required for a development workflow it did simplify references
within unit testing code.</p>

<p>The supporting Grunt configuration for these two plugins is as follows:</p>

<figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;matchdep&#39;</span><span class="p">).</span><span class="nx">filterDev</span><span class="p">(</span><span class="s1">&#39;grunt-*&#39;</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">dependencies</span> <span class="o">=</span> <span class="p">[</span> <span class="p">...</span> <span class="p">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">fileblocks</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">removeFiles</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">templates</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">less</span><span class="o">:</span> <span class="s1">&#39;@import \&#39;${file}\&#39;;&#39;</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="nx">js</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;app/app.html&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">blocks</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">dependencies</span><span class="o">:</span> <span class="p">{</span> <span class="nx">cwd</span><span class="o">:</span> <span class="s1">&#39;app&#39;</span><span class="p">,</span> <span class="nx">src</span><span class="o">:</span> <span class="nx">dependencies</span> <span class="p">},</span>
</span><span class='line'>                  <span class="nx">components</span><span class="o">:</span> <span class="p">{</span> <span class="nx">cwd</span><span class="o">:</span> <span class="s1">&#39;app&#39;</span><span class="p">,</span> <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;components/**/*.js&#39;</span> <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="nx">less</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;app/app.less&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">blocks</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">components</span><span class="o">:</span> <span class="p">{</span> <span class="nx">cwd</span><span class="o">:</span> <span class="s1">&#39;app&#39;</span><span class="p">,</span> <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;components/**/*.less&#39;</span> <span class="p">}</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">ngtemplates</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">prefix</span><span class="o">:</span> <span class="s1">&#39;template/&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">standalone</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">htmlmin</span><span class="o">:</span> <span class="p">{</span> <span class="nx">collapseWhitespace</span><span class="o">:</span> <span class="kc">true</span> <span class="p">}</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="nx">templates</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">cwd</span><span class="o">:</span> <span class="s1">&#39;app/components&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;**/*.html&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;app/components/templates.js&#39;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>This setup eliminated the need to manually update referenced assets and
provided the basis for a rapid development workflow and a streamlined
production build.</p>

<p>During development, assets are served from the <em>app/</em> directory. A custom
Grunt task was registered to start the server and reload on both client- and
server-side changes. For client-side changes, less files and angular templates
are processed and the browser is refreshed using <a href="http://livereload.com">LiveReload</a>. For
server-side changes, the Node.js server process is restarted. During
development, the developer simply runs <code>grunt dev</code> on the command line, points
a browser at <code>http://localhost:8080</code>, and edits/saves code to view the changes.</p>

<p>The following Grunt configuration supports this workflow. It leverages
<a href="https://github.com/gruntjs/grunt-contrib-watch">grunt-contrib-watch</a> and <a href="https://github.com/ChrisWren/grunt-nodemon">grunt-nodemon</a> to watch and reload client-
and server-side resources respectively. <a href="https://github.com/sindresorhus/grunt-concurrent">grunt-concurrent</a> allows these
two plugins to run concurrently.</p>

<figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;matchdep&#39;</span><span class="p">).</span><span class="nx">filterDev</span><span class="p">(</span><span class="s1">&#39;grunt-*&#39;</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">dependencies</span> <span class="o">=</span> <span class="p">[</span> <span class="p">...</span> <span class="p">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">concurrent</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">dev</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">tasks</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;nodemon&#39;</span><span class="p">,</span> <span class="s1">&#39;watch&#39;</span><span class="p">],</span>
</span><span class='line'>              <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">logConcurrentOutput</span><span class="o">:</span> <span class="kc">true</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">nodemon</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">dev</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">file</span><span class="o">:</span> <span class="s1">&#39;server.js&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">ignoredFiles</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;app&#39;</span><span class="p">,</span> <span class="s1">&#39;test&#39;</span><span class="p">,</span> <span class="s1">&#39;node_modules&#39;</span><span class="p">],</span>
</span><span class='line'>                  <span class="nx">watchedExtensions</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;js&#39;</span><span class="p">]</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">watch</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">app</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">options</span><span class="o">:</span> <span class="p">{</span> <span class="nx">livereload</span><span class="o">:</span> <span class="kc">true</span> <span class="p">},</span>
</span><span class='line'>              <span class="nx">files</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>                  <span class="s1">&#39;app/app.*&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s1">&#39;app/components/**/*.js&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="s1">&#39;app/images/*&#39;</span>
</span><span class='line'>              <span class="p">]</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="nx">templates</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">tasks</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;ngtemplates&#39;</span><span class="p">],</span>
</span><span class='line'>              <span class="nx">files</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;app/components/**/*.html&#39;</span><span class="p">]</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="nx">less</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">tasks</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;less&#39;</span><span class="p">],</span>
</span><span class='line'>              <span class="nx">files</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;app/app.less&#39;</span><span class="p">,</span> <span class="s1">&#39;app/components/**/*.less&#39;</span><span class="p">]</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">less</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">build</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">files</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;app/app.css&#39;</span><span class="o">:</span> <span class="s1">&#39;app/app.less&#39;</span> <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;dev&#39;</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>      <span class="s1">&#39;ngtemplates&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;fileblocks:js&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;fileblocks:less&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;less&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;concurrent&#39;</span>
</span><span class='line'>  <span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>For production, the build system uses the excellent <a href="https://github.com/yeoman/grunt-usemin">grunt-usemin</a> plugin
to replace non-optimized scripts and stylesheets in <em>app.html</em> with a
reference to a single optimized <em>app.js</em> and <em>app.css</em> file. This is
combined with the <a href="https://github.com/cbas/grunt-rev">grunt-rev</a> plugin for asset revisioning to support cache
busting when changes are made. Ultimately, the application consists of three
core files, <em>app.html</em>, <em>app.js</em>, and <em>app.css</em> with the later two served with
an explicit cache header.</p>

<p>To round out the production build, <a href="https://github.com/btford/grunt-ngmin">grunt-ngmin</a> is used to pre-minify
Angular scripts so that minifers appropriately handle the dependency
injection style used by the framework.</p>

<figure class='code'><figcaption><span>Gruntfile.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">grunt</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;matchdep&#39;</span><span class="p">).</span><span class="nx">filterDev</span><span class="p">(</span><span class="s1">&#39;grunt-*&#39;</span><span class="p">).</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">grunt</span><span class="p">.</span><span class="nx">loadNpmTasks</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">dependencies</span> <span class="o">=</span> <span class="p">[</span> <span class="p">...</span> <span class="p">]</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">initConfig</span><span class="p">({</span>
</span><span class='line'>      <span class="nx">clean</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">build</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;public&#39;</span><span class="p">],</span>
</span><span class='line'>          <span class="nx">templates</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;app/templates/**/*.js&#39;</span><span class="p">],</span>
</span><span class='line'>          <span class="nx">less</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;app/styles/*.css&#39;</span><span class="p">],</span>
</span><span class='line'>          <span class="nx">test</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;test/**/*.log&#39;</span><span class="p">]</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">copy</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">fonts</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">expand</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">cwd</span><span class="o">:</span> <span class="s1">&#39;app/fonts&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;**&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;public/fonts/&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">flatten</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">filter</span><span class="o">:</span> <span class="s1">&#39;isFile&#39;</span>
</span><span class='line'>          <span class="p">},</span>
</span><span class='line'>          <span class="nx">sounds</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">expand</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">cwd</span><span class="o">:</span> <span class="s1">&#39;app/sounds&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;**&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;public/sounds/&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">flatten</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">filter</span><span class="o">:</span> <span class="s1">&#39;isFile&#39;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">useminPrepare</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">options</span><span class="o">:</span> <span class="p">{</span> <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;public&#39;</span> <span class="p">},</span>
</span><span class='line'>          <span class="nx">html</span><span class="o">:</span> <span class="s1">&#39;app/*.html&#39;</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">usemin</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">html</span><span class="o">:</span> <span class="s1">&#39;public/*.html&#39;</span><span class="p">,</span>
</span><span class='line'>          <span class="nx">css</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;public/*.css&#39;</span><span class="p">,</span> <span class="s1">&#39;public/index.html&#39;</span><span class="p">],</span>
</span><span class='line'>          <span class="nx">js</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;public/*.js&#39;</span><span class="p">],</span>
</span><span class='line'>          <span class="nx">options</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">patterns</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>                  <span class="nx">js</span><span class="o">:</span> <span class="p">[[</span>
</span><span class='line'>                      <span class="sr">/[&quot;&#39;]([^:&quot;&#39;]+\.(?:png|gif|jpe?g|css|js))[&quot;&#39;]/img</span><span class="p">,</span>
</span><span class='line'>                      <span class="s1">&#39;Update JavaScript with assets in strings&#39;</span>
</span><span class='line'>                  <span class="p">]]</span>
</span><span class='line'>              <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">htmlmin</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">build</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">files</span><span class="o">:</span> <span class="p">[{</span>
</span><span class='line'>                  <span class="nx">expand</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">cwd</span><span class="o">:</span> <span class="s1">&#39;app&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;*.html&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;public&#39;</span>
</span><span class='line'>              <span class="p">}]</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">imagemin</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">build</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">files</span><span class="o">:</span> <span class="p">[{</span>
</span><span class='line'>                  <span class="nx">expand</span><span class="o">:</span> <span class="kc">true</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">cwd</span><span class="o">:</span> <span class="s1">&#39;app/images&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">src</span><span class="o">:</span> <span class="s1">&#39;*.{jpg,png}&#39;</span><span class="p">,</span>
</span><span class='line'>                  <span class="nx">dest</span><span class="o">:</span> <span class="s1">&#39;public/images&#39;</span>
</span><span class='line'>              <span class="p">}]</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">ngmin</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">build</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">files</span><span class="o">:</span> <span class="p">{</span> <span class="s1">&#39;public/app.js&#39;</span><span class="o">:</span> <span class="s1">&#39;public/app.js&#39;</span> <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">},</span>
</span><span class='line'>      <span class="nx">rev</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">build</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">src</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;public/**/*.{js,css,png,jpg,woff}&#39;</span><span class="p">]</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">})</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">grunt</span><span class="p">.</span><span class="nx">registerTask</span><span class="p">(</span><span class="s1">&#39;build&#39;</span><span class="p">,</span> <span class="p">[</span>
</span><span class='line'>      <span class="s1">&#39;clean&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;fileblocks:js&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;fileblocks:less&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;less&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;copy&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;useminPrepare&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;ngtemplates&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;concat&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;htmlmin&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;imagemin&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;cssmin&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;ngmin&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;uglify&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;rev&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;usemin&#39;</span>
</span><span class='line'>  <span class="p">])</span>
</span></code></pre></td></tr></table></div></figure>


<p>To conclude, a new production server can be run with the following commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone 4dashes.git
</span><span class='line'>$ cd 4dashes
</span><span class='line'>$ npm install --production
</span><span class='line'>$ bower install --production
</span><span class='line'>$ grunt build
</span><span class='line'>$ NODE_ENV=production node server.js</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Working Smarter, Not Longer]]></title>
    <link href="http://smdahlen.github.com/blog/2014/03/12/working-smarter-not-longer/"/>
    <updated>2014-03-12T11:27:09-04:00</updated>
    <id>http://smdahlen.github.com/blog/2014/03/12/working-smarter-not-longer</id>
    <content type="html"><![CDATA[<p>This post discusses my challenge to work smarter, not longer, and the path that
led me to build 4dashes &mdash; a productivity tool inspired by the Pomodoro
Technique.</p>

<!-- more -->


<p>Frustration was mounting. I wanted continued success at work without
sacraficing the value I place on family. Within the span of a few years, my
responsibilities had increased significantly from an associate software
engineer to a program manager overseeing multiple projects. Naturally, the
pressure to work longer came with it &mdash; in fact, our culture demanded it &mdash; the
number of hours we worked was viewed as a badge of honor.
Frustration was mounting indeed.</p>

<p>As a newly minted manager, my first inclination was to become more organized.
It seemed rational. The more organized I was the more in-control I felt. I tried
several productivity tools based on <a href="http://www.43folders.com/2004/09/08/getting-started-with-getting-things-done">GTD</a>. They worked wonders for organizing
my work but did little to help get things actually done. My inbox was zero but my
todo list was a mile long. It seemed like I had to reset myself every few weeks
to regain the illusion of control I craved.</p>

<p>After repeating this nasty cycle more times than I care to admit, I reflected on
the situation and realized that my old work habits were becoming an impediment.
With less responsibility, I was able to deliver <em>perfect</em> results while still
handily supporting interruptions and socialization with colleagues.
But as my workload increased, this became untenable.</p>

<p>The time I dedicated to delivering results was squeezed by an increasingly
interrupt-driven work environment and I let it happen. Looking back,
it makes sense. Constantly responding to email, helping colleagues, and
putting out fires creates a short-term reward loop that is tough to break.
Don&rsquo;t get me wrong, I understand that much of this comes with accepting more
responsibility. I simply refused to fall into this trap that so many around me
did. I sought new work habits that would assist in setting limits so I could
focus on what was important.</p>

<p>When I came across the concept of the <a href="http://www.43folders.com/2005/09/08/kick-procrastinations-ass-run-a-dash">productivity dash</a>, and later, the
<a href="http://pomodorotechnique.com">Pomodoro Technique</a>, I was immediately drawn in by the power and simplicity
of the timebox. Select an important task to focus on and work on it
uninterrupted for a small duration of time. By doing so, you become more
mindful of the triggers for interruption and develop strategies to handle
them effectively.</p>

<p>Unfortunately, changing habits is hard. While recording the completion of
a dash or pomodoro does brings a small sense of accomplishment, I started
brainstorming about gamification techniques that could be applied to the
concept of a timebox. The objective was to replicate a compelling reward
loop facilitated by challenges and leaderboards that would build a
sustainable path towards mastery. The result was the product of my recent
startup, <a href="https://4dashes.com">4dashes</a>.</p>

<p>4dashes is a productivity tool inspired by the Pomodoro Technique that
transforms your todo list into a game challenging you build more effective
work habits. Habits that enable you to plan and accomplish important work
in the face of urgent and unexpected activities. And with that in hand,
you gain the power of truely managing expectations and the satisfaction it
brings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Product Launched]]></title>
    <link href="http://smdahlen.github.com/blog/2014/03/10/product-launched/"/>
    <updated>2014-03-10T17:22:00-04:00</updated>
    <id>http://smdahlen.github.com/blog/2014/03/10/product-launched</id>
    <content type="html"><![CDATA[<p>For those who followed my posts during the beginning of my startup, I have
launched a preview of the product.</p>

<!-- more -->


<p>The product, <a href="https://4dashes.com">4dashes</a>, is a productivity tool that turns your todo list
into a game challenging you build effective work habits. Head over now and
sign up for a preview account. If you like what you see and have an interest
in working smarter &mdash; not longer &mdash; please consider contributing to the
Indiegogo <a href="http://www.indiegogo.com/projects/4dashes-turn-work-into-serious-fun">campaign</a>. If the campaign is funded, the product will
officially launch in June along with incomplete features such as leaderboards.</p>

<p>Unfortunately I was unable to keep up with the blogging during the startup
period. My time and attention were required on the pressing matter of product
design and development. With that complete, I will be posting several new
articles over the next two weeks that summarize why and how I built 4dashes.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Draft Product Scope]]></title>
    <link href="http://smdahlen.github.com/blog/2013/05/03/draft-product-scope/"/>
    <updated>2013-05-03T15:27:00-04:00</updated>
    <id>http://smdahlen.github.com/blog/2013/05/03/draft-product-scope</id>
    <content type="html"><![CDATA[<p>With an <a href="http://shawn.dahlen.me/blog/2013/04/12/manage-all-application-environments-with-vagrant/">operational approach</a> for managing my environment established, I
shifted my attention toward drafting product scope over the past few weeks.
This post outlines the core product features and acceptance criteria that will
be referenced during the upcoming design and development activities.</p>

<!-- more -->


<p>As I mentioned in my second <a href="http://shawn.dahlen.me/blog/2013/03/05/prepare-business-operations/">post</a>, I will be implementing a task management
product that provides first-class support for the <a href="http://www.pomodorotechnique.com/">Pomodoro Technique</a>. One
of the aspects of the technique that I find intriguing is the use of data to
review progress and provide motivation for continued success. For those who
have dabbled with personal productivity solutions over the years, it would come
as no surprise that sticking with a solution is hard. Without continued use,
positive habits never form and the expected productivity gains are never
realized. With my product, I intend to leverage the data collected from the
Pomodoro Technique to create a positive feedback loop motivating the individual
to modify their behavior over time.</p>

<p>To begin, I established the product goal for Marinara (the working name) as a
tool to increase personal productivity and assist in managing expectations
(with yourself, boss, or client).</p>

<p>Next, I crisply defined the core high-level features that would support the
product goal:</p>

<ol>
<li>A proven <strong>workflow</strong> based on the Pomodoro Technique that enhances your focus
and concentration to complete complex, creative projects.</li>
<li>Challenging <strong>gameplay</strong> that offers a sustainable path towards mastery of
the technique.</li>
<li>In-depth <strong>statistics and charts</strong> that increases awareness of your actions
to support effective decision making.</li>
</ol>


<p>Finally, I brainstormed, drafted, and revised a set of user stories and
acceptance criteria supporting the high-level features. Much time was given to
both creating a set of compelling game elements and ensuring testability of the
entire scope. The scope is succinct and intended as a foundation for creating
the user experience design &mdash; little attention was paid to drafting copy for
end users either as a manual or marketing material.</p>

<p>Without much further adieu here is the scope for Marinara &mdash; <em>a product that
helps you tackle your creative project and have fun doing it</em>.</p>

<hr />

<h2>Pomodoro</h2>

<ul>
<li>As a player, I want to start a pomodoro for a specific task.

<ul>
<li>It should display a timer counting down from 25 minutes.</li>
<li>It should display a timer counting down from 5 minutes when the 25 minute
count down is complete.</li>
<li>It should prompt the player for an estimate if one has not been provided
and the player is at the intermediate level or above.</li>
</ul>
</li>
<li>As a player, I want to cancel the pomodoro.

<ul>
<li>It should clear the timer count down.</li>
<li>It should record the cancelled pomodoro.</li>
</ul>
</li>
<li>As a player, I want to be notified when the pomodoro completes.

<ul>
<li>It should display a notification when the 25 minute count down is
complete.</li>
<li>It should play an audio notification when the 25 minute count down is
complete.</li>
<li>It should display a notification when the 5 minute count down is
complete.</li>
<li>It should play an audio notification when the 5 minute count down is
complete.</li>
<li>It should display a notification to start the next pomodoro within 60
seconds to continue a set if a player is at the advanced beginner level
or above.</li>
<li>It should record a completed pomodoro when the 25 minute count down is
complete.</li>
<li>It should disable changing an estimate after a completed pomodoro has
been recorded for a task.</li>
</ul>
</li>
<li>As a player, I want to record an internal interruption.

<ul>
<li>It should record an internal interruption associated to the current
pomodoro.</li>
</ul>
</li>
<li>As a player, I want to record an external interruption.

<ul>
<li>It should record an external interruption associated to the current
pomodoro.</li>
</ul>
</li>
<li>As a player, I want to view the number of pomodoros completed for the
current set.

<ul>
<li>It should unlock this feature when a player completes the beginner level.</li>
<li>It should display the number of pomodoros completed out of 4 for the
set.</li>
<li>It should reset the current set to 0 if the next pomodoro is not started
within 60 seconds after the previous pomodoro ended.</li>
<li>It should display a notification to take a 15 to 30 minute break when a
set is completed.</li>
</ul>
</li>
</ul>


<h2>Today Sheet</h2>

<ul>
<li>As a player, I want to view the tasks for today.

<ul>
<li>It should display a section for planned tasks.</li>
<li>It should display a section for unplanned / urgent tasks.</li>
<li>It should display the title and pomodoros completed for a task.</li>
<li>It should display the estimate for a task if the player is at the
intermediate level or above.</li>
<li>It should clear all tasks from yesterday.</li>
</ul>
</li>
<li>As a player, I want to view a set of recommended tasks to work on today.

<ul>
<li>It should display yesterday&rsquo;s unfinished tasks.</li>
<li>It should display tasks due within the next few days.</li>
<li>It should display tasks related to other recently completed tasks.</li>
</ul>
</li>
<li>As a player, I want to add a new task to the today sheet.

<ul>
<li>It should associate the new task to the player&rsquo;s default inventory.</li>
</ul>
</li>
<li>As a player, I want to remove a task from the today sheet.

<ul>
<li>It should clear the task from the today sheet.</li>
</ul>
</li>
<li>As a player, I want to reorder tasks on the today sheet.

<ul>
<li>It should support drag and drop ordering.</li>
<li>It should save the ordering of tasks on the today sheet.</li>
</ul>
</li>
<li>As a player, I want to commit to planned tasks for today.

<ul>
<li>It should unlock this feature when a player completes the intermediate
level.</li>
<li>It should require a minimum of 10 pomodoros of effort.</li>
<li>It should disable new tasks from be added to the planned section after
a player commits.</li>
<li>It should record a commitment met if all planned tasks are completed
by the end of the day.</li>
<li>It should display a notification when the commitment is met for today.</li>
</ul>
</li>
<li>As a player, I want to view a recommended amount of planned tasks to work
on today.

<ul>
<li>It should unlock this feature when a player completes the advanced
beginner level.</li>
<li>It should display the pomodoro effort for the planned tasks.</li>
<li>It should display the moving average for planned pomodoros completed.</li>
<li>It should display a warning if the planned effort is 20% greater than
the moving average.</li>
</ul>
</li>
<li>As a player, I want to mark a task as complete.

<ul>
<li>It should strikeout the task.</li>
<li>It should update the status of the task to complete.</li>
</ul>
</li>
<li>As a player, I want to view a summary of today&rsquo;s progress.

<ul>
<li>It should display the number of pomodoros completed.</li>
<li>It should display the number of interruptions recorded.</li>
<li>It should display the points earned.</li>
<li>It should display the number of sets completed if the player is at the
advanced beginner level or above.</li>
<li>It should display the estimation accuracy if the player is at the
intermediate level or above.</li>
</ul>
</li>
</ul>


<h2>Accounts</h2>

<ul>
<li>As a player, I want to sign up for the service using my email address.

<ul>
<li>It should require a full name.</li>
<li>It should require an email address.</li>
<li>It should require a complex password.</li>
<li>It should confirm the complex password.</li>
<li>It should accept a time zone.</li>
</ul>
</li>
<li>As a player, I want to verify my identity with an email confirmation.

<ul>
<li>It should set the account status to pending verification upon sign up.</li>
<li>It should display a notification to verify the email address upon sign up.</li>
<li>It should send an email containing an activation link to the new player
that expires in 24 hours upon sign up.</li>
<li>It should set the account status to active when the link is visited.</li>
<li>It should display a warning when attempting to login with an account
status set to pending verification.</li>
<li>It should support the player requesting a new email containing an
activation link.</li>
</ul>
</li>
<li>As a player, I want to reset my password that I have forgotten.

<ul>
<li>It should require an email address.</li>
<li>It should send an email containing a reset link that expires in 24 hours.</li>
<li>It should require a complex password after visiting the reset link.</li>
<li>It should confirm the complex password.</li>
<li>It should update the player&rsquo;s password if it is confirmed.</li>
</ul>
</li>
<li>As a player, I want to login with my email address.

<ul>
<li>It should require an email address.</li>
<li>It should require a password.</li>
<li>It should display a warning if the credentials were incorrect.</li>
<li>It should redirect to the player&rsquo;s home page if correct.</li>
</ul>
</li>
<li>As a player, I want to manage my account settings.

<ul>
<li>It should support updating the player&rsquo;s timezone.</li>
<li>It should support updating the player&rsquo;s email address.</li>
<li>It should support updating the player&rsquo;s password.</li>
<li>It should support updating the player&rsquo;s full name.</li>
<li>It should support toggling audio notifications.</li>
</ul>
</li>
<li>As a player, I want to login with my Facebook credentials.

<ul>
<li>It should request permission to access the player&rsquo;s public profile.</li>
<li>It should request permission to access the player&rsquo;s email address.</li>
<li>It should create a new account with the player&rsquo;s Facebook token if it
does not exist.</li>
</ul>
</li>
<li>As a player, I want to purchase a subscription.

<ul>
<li>It should support purchase of a monthly subscription.</li>
<li>It should support purchase of a yearly subscription.</li>
<li>It should accept credit cards and PayPal directly on the service website.</li>
<li>It should send an email containing an invoice for the subscription.</li>
</ul>
</li>
<li>As a player, I want to apply a coupon to receive a subscription discount.

<ul>
<li>It should require a valid coupon code.</li>
<li>It should apply the associated coupon code discount to the selected
subscription.</li>
</ul>
</li>
<li>As the service owner, I want an account locked until a subscription is
purchased.

<ul>
<li>It should set the account status to locked when the player completes the
beginner level.</li>
<li>It should set the account status to locked when a subscription lapses.</li>
<li>It should redirect locked accounts to purchase a subscription.</li>
</ul>
</li>
</ul>


<h2>Inventory Sheets</h2>

<ul>
<li>As a player, I want to create an new inventory sheet.

<ul>
<li>It should require a name.</li>
<li>It should support setting the inventory as the player&rsquo;s default.</li>
</ul>
</li>
<li>As a player, I want to remove an inventory sheet.

<ul>
<li>It should prompt the player to confirm removing all tasks in the
inventory.</li>
<li>It should remove all tasks in the inventory.</li>
</ul>
</li>
<li>As a player, I want to view tasks in an inventory.

<ul>
<li>It should support sorting tasks by due date.</li>
<li>It should support sorting tasks by estimate if a player is at the
intermediate level or above.</li>
<li>It should support toggling between complete and incomplete tasks.</li>
<li>It should display incomplete tasks by default.</li>
<li>It should display tasks sorted by due date by default.</li>
<li>It should display an indicator if the estimate is greater than 7 if the
player is at the intermediate level or above.</li>
</ul>
</li>
<li>As a player, I want to add a new task to an inventory.

<ul>
<li>It should require a title.</li>
<li>It should accept an optional due date.</li>
<li>It should accept an optional estimate if the player is at the
intermediate level or above.</li>
<li>It should accept zero or more tags.</li>
<li>It should accept a note.</li>
<li>It should support associating the task to a parent task.</li>
</ul>
</li>
<li>As a player, I want to edit an existing task.

<ul>
<li>It should update the title.</li>
<li>It should update the due date.</li>
<li>It should update the estimate if the player is at the intermediate level
or above.</li>
<li>It should update the tags.</li>
<li>It should update the note.</li>
</ul>
</li>
<li>As a player, I want to remove a task from an inventory.

<ul>
<li>It should soft delete the task if it has pomodoros associated to it.</li>
<li>It should hard delete the task if it has no pomodoros associated to it.</li>
</ul>
</li>
<li>As a player, I want to move a task to another inventory.

<ul>
<li>It should clear the task from the current inventory.</li>
<li>It should update the task to the specified inventory.</li>
</ul>
</li>
<li>As a player, I want to select tasks to work on today.

<ul>
<li>It should display the selected tasks on the planned section for today.</li>
<li>It should display an indicator next to tasks in an inventory that are
planned for today.</li>
</ul>
</li>
<li>As a player, I want to deselect tasks to work on today.

<ul>
<li>It should clear the deselected tasks from the planned section for today.</li>
</ul>
</li>
<li>As a player, I want to filter tasks by tag.

<ul>
<li>It should support the player selecting zero or more tags to filter tasks.</li>
<li>It should display tasks that contain one of the selected tags.</li>
</ul>
</li>
<li>As a player, I want to bundle small tasks into a larger one.

<ul>
<li>It should support the player selecting two or more tasks.</li>
<li>It should create a new parent task for the selected tasks.</li>
</ul>
</li>
</ul>


<h2>Metrics</h2>

<ul>
<li>As a player, I want to view a metric for pomodoros completed per day.

<ul>
<li>It should equal the 14-day moving average for pomodoros completed per day.</li>
<li>It should not include inactive days.</li>
<li>It should equal N/A if there is less than 8 active days within the last
14 days.</li>
<li>It should display the component metrics of unplanned and planned pomodoros
completed per day.</li>
</ul>
</li>
<li>As a player, I want to view a metric for pomodoros cancelled per day.

<ul>
<li>It should equal the 14-day moving average for pomodoros cancelled per day.</li>
<li>It should not include inactive days.</li>
<li>It should equal N/A if there is less than 8 active days within the last
14 days.</li>
</ul>
</li>
<li>As a player, I want to view a metric for sets completed per day.

<ul>
<li>It should unlock this feature when the player completes the beginner
level.</li>
<li>It should equal the 14-day moving average for sets completed per day.</li>
<li>It should not include inactive days.</li>
<li>It should equal N/A if there is less than 8 active days within the last
14 days.</li>
</ul>
</li>
<li>As a player, I want to view a metric for total interruptions per day.

<ul>
<li>It should equal the 14-day moving average for total interruptions per day.</li>
<li>It should not include inactive days.</li>
<li>It should equal N/A if there is less than 8 active days within the last
14 days.</li>
<li>It should display the component metrics of internal and external
interruptions per day.</li>
</ul>
</li>
<li>As a player, I want to view a metric for estimation accuracy.

<ul>
<li>It should unlock this feature when the player completes the advanced
beginner level.</li>
<li>It should equal the 14-day moving average for estimation accuracy per day.</li>
<li>It should not include inactive days.</li>
<li>It should equal N/A if there is less than 8 active days within the last
14 days.</li>
</ul>
</li>
<li>As a player, I want to view a metric for estimation bias.

<ul>
<li>It should unlock this feature when the player completes the advanced
beginner level.</li>
<li>It should equal the 14-day moving average of the daily difference between
estimated and actual pomodoros.</li>
<li>It should not include inactive days.</li>
<li>It should equal N/A if there is less than 8 active days within the last
14 days.</li>
</ul>
</li>
<li>As a player, I want to view a metric for the current streak of commitments
met.

<ul>
<li>It should unlock this feature when the player completes the intermediate
level.</li>
<li>It should determine a commitment met if all planned tasks are completed
and the total effort was 10 or more pomodoros.</li>
<li>It should equal the current continuous days of commitments met.</li>
<li>It should not include inactive days.</li>
<li>It should reset if there is less than 8 active days within the last
14 days.</li>
</ul>
</li>
<li>As a player, I want to view a metric for the longest streak of commitments
met.

<ul>
<li>It should unlock this feature when the player completes the intermediate
level.</li>
<li>It should equal the longest streak of commitments met since the
player started.</li>
</ul>
</li>
</ul>


<h2>Charts</h2>

<ul>
<li>As a player, I want to view a chart visualizing the pomodoros completed per
day.

<ul>
<li>It should display a segmented bar chart with completed and cancelled
pomodoros per day.</li>
<li>It should display a stacked bar for unplanned and planned
completed pomodoros per day.</li>
<li>It should display a trend line with the 14-day moving average of
completed pomodoros per day.</li>
<li>It should display the last 60 days of data.</li>
<li>It should not include inactive days.</li>
</ul>
</li>
<li>As a player, I want to view a chart visualizing the total interruptions per
day.

<ul>
<li>It should display a stacked bar chart with internal and external
interruptions per day.</li>
<li>It should display a trend line with the 14-day moving average of total
interruptions per day.</li>
<li>It should display the last 60 days of data.</li>
<li>It should not include inactive days.</li>
</ul>
</li>
<li>As a player, I want to view a chart visualizing the estimation accuracy.

<ul>
<li>It should unlock this feature when the player completes the advanced
beginner level.</li>
<li>It should display a bar chart with estimation accuracy per day.</li>
<li>It should display a trend line with the 14-day moving average of
estimation accuracy.</li>
<li>It should display the last 60 days of data.</li>
<li>It should not include inactive days.</li>
</ul>
</li>
<li>As a player, I want to view a chart visualizing pomodoros completed per tag.

<ul>
<li>It should display a pie chart with the top 5 tags collapsing the
remaining tags into an &lsquo;other&rsquo; category.</li>
<li>It should include the last 14 active days of data.</li>
</ul>
</li>
</ul>


<h2>Progress Reports</h2>

<ul>
<li>As a player, I want to receive a weekly progress report via email.

<ul>
<li>It should include upcoming tasks due within the next 14 days.</li>
<li>It should include tasks completed over the past 7 days.</li>
<li>It should include the points earned over the past 7 days.</li>
<li>It should include the leaderboard rank.</li>
<li>It should include the percent change for pomodoros completed per day rate
over the past 7 days.</li>
<li>It should include the percent change for estimation accuracy over the
past 7 days if the player is at the intermediate level or above.</li>
<li>It should include the progress of the current achievements.</li>
</ul>
</li>
</ul>


<h2>Points</h2>

<ul>
<li>As a player, I want to earn points for completing a pomodoro.

<ul>
<li>It should award 5 points.</li>
</ul>
</li>
<li>As a player, I want to receive points for completing a set.

<ul>
<li>It should unlock this feature when the player completes the beginner
level.</li>
<li>It should award 5 points.</li>
</ul>
</li>
<li>As a player, I want to earn points for correctly estimating a task.

<ul>
<li>It should unlock this feature when the player completes the advanced
beginner level.</li>
<li>It should award points equal to the estimate of the task.</li>
</ul>
</li>
<li>As a player, I want to earn points for meeting my commitment for today.

<ul>
<li>It should unlock this feature when the player completes the intermediate
level.</li>
<li>It should award points equal to committed pomodoros for today.</li>
</ul>
</li>
</ul>


<h2>Beginner Level</h2>

<ul>
<li>As a player, I want to read an introduction to the beginner level.

<ul>
<li>It should display content introducing the beginner level objective.</li>
<li>It should display content introducing the timer and inventory features.</li>
<li>It should display content introducing the beginner level achievements.</li>
</ul>
</li>
<li>As a player, I want to view my progress completing the beginner level
achievements.

<ul>
<li>It should display the number of times a player has completed 8 pomodoros
in one day.</li>
<li>It should display the current rate of pomodoros per day.</li>
<li>It should display the number of recorded interruptions.</li>
</ul>
</li>
<li>As a player, I want to be notified when completing a beginner level
achievement.

<ul>
<li>It should display a notification when a player completes 8 pomodoros in
one day 3 times.</li>
<li>It should display a notification when a player achieves a rate of 4
pomodoros per day.</li>
<li>It should display a notification when a player records 50 interruptions.</li>
</ul>
</li>
<li>As a player, I want to be notified when completing the beginner level.

<ul>
<li>It should display a notification when a player completes all three
achievements and accumulates 300 points.</li>
<li>It should advance the player to the advanced beginner level.</li>
</ul>
</li>
</ul>


<h2>Advanced Beginner Level</h2>

<ul>
<li>As a player, I want to read an introduction to the advanced beginner level.

<ul>
<li>It should display content introducing the advanced beginner level
objective.</li>
<li>It should display content introducing the timer set feature.</li>
<li>It should display content introducing the advanced beginner achievements.</li>
</ul>
</li>
<li>As a player, I want to view my progress completing the advanced beginner level
achievements.

<ul>
<li>It should display the number of times a player has completed a set.</li>
<li>It should display the current rate of pomodoros per day.</li>
<li>It should display the percent improvement of the interruption rate and
cancelled pomodoros.</li>
</ul>
</li>
<li>As a player, I want to be notified when completing an advanced beginner level
achievement.

<ul>
<li>It should display a notification when a player completes 20 sets.</li>
<li>It should display a notification when a player achieves a rate of 8
pomodoros per day.</li>
<li>It should display a notification when a player decreases the interruption
rate and cancelled pomodoros by 50%.</li>
</ul>
</li>
<li>As a player, I want to be notified when completing the advanced beginner
level.

<ul>
<li>It should display a notification when a player completes all three
achievements and accumulates 1500 points.</li>
<li>It should advance the player to the intermediate level.</li>
</ul>
</li>
</ul>


<h2>Intermediate Level</h2>

<ul>
<li>As a player, I want to read an introduction to the intermediate level.

<ul>
<li>It should display content introducing the intermediate level objective.</li>
<li>It should display content introducing the estimation feature.</li>
<li>It should display content introducing the intermediate achievements.</li>
</ul>
</li>
<li>As a player, I want to view my progress completing the intermediate level
achievements.

<ul>
<li>It should display the number of times a player achieves a 90% estimation
accuracy in one day.</li>
<li>It should display the current rate of sets completed per day.</li>
<li>It should display the percent improvement of unplanned pomodoros
completed.</li>
</ul>
</li>
<li>As a player, I want to be notified when completing an intermediate level
achievement.

<ul>
<li>It should display a notification when a player achieves a 90% estimation
accuracy in one day 20 times.</li>
<li>It should display a notification when a player achieves a rate of 2 sets
completed per day.</li>
<li>It should display a notification when a player decreases unplanned
pomodoros completed by 50%.</li>
</ul>
</li>
<li>As a player, I want to be notified when completing the intermediate level.

<ul>
<li>It should display a notification when a player completes all three
achievements and accumulates 5000 points.</li>
<li>It should advance the player to the advanced level.</li>
</ul>
</li>
</ul>


<h2>Advanced Level</h2>

<ul>
<li>As a player, I want to read an introduction to the advanced level.

<ul>
<li>It should display content introducing the advanced level objective.</li>
<li>It should display content introducing the daily commitment feature.</li>
<li>It should display content introducing the advanced achievements.</li>
</ul>
</li>
<li>As a player, I want to view my progress completing the advanced level
achievements.

<ul>
<li>It should display the number of times a player has met his daily
commitment.</li>
<li>It should display the current estimation accuracy rate.</li>
<li>It should display the percent improvement of estimation bias.</li>
</ul>
</li>
<li>As a player, I want to be notified when completing an advanced level
achievement.

<ul>
<li>It should display a notification when a player meets his daily commitment
20 times.</li>
<li>It should display a notification when a player achieves a estimation
accuracy rate of 90%.</li>
<li>It should display a notification when a player reduces his estimation bias
by 50%.</li>
</ul>
</li>
<li>As a player, I want to be notified when completing the advanced level.

<ul>
<li>It should display a notification when a player completes all three
achievements and accumulates 15000 points.</li>
<li>It should advance the player to the master level.</li>
</ul>
</li>
</ul>


<h2>Master Level</h2>

<ul>
<li>As a player, I want to read an introduction the master level.

<ul>
<li>It should display content introducing the master level objective.</li>
<li>It should display content introducing the master achievement.</li>
</ul>
</li>
<li>As a player, I want to view my progress completing the master level
achievements.

<ul>
<li>It should display the longest commitment streak.</li>
</ul>
</li>
<li>As a player, I want to be notified when completing a master level
achievement.

<ul>
<li>It should display a notification when a player achieves a commitment
streak of 20 days.</li>
</ul>
</li>
</ul>


<h2>Supporters</h2>

<ul>
<li>As a player, I want to search for other players.

<ul>
<li>It should support searching by name.</li>
<li>It should support searching by email address.</li>
</ul>
</li>
<li>As a player, I want to request support from another player.

<ul>
<li>It should display a support request for the receiver.</li>
<li>It should send an email to the receiver that support has been requested.</li>
</ul>
</li>
<li>As a player, I want to accept a support request from another player.

<ul>
<li>It should support accepting a support request.</li>
<li>It should support ignoring a support request.</li>
<li>It should create a support relationship when the request is accepted.</li>
<li>It should send an email to the requestor that the support request has
been accepted.</li>
</ul>
</li>
<li>As a player, I want to remove support for another player.

<ul>
<li>It should delete the support relationship.</li>
</ul>
</li>
<li>As a player, I want to view a leaderboard of my supporters.

<ul>
<li>It should rank supporters and the player by points earned for today.</li>
<li>It should rank supporters and the player by points earned for the past
14 days.</li>
<li>It should rank supporters and the player by points earned for all time.</li>
<li>It should support viewing key metrics for each supporter.</li>
</ul>
</li>
<li>As a player, I want to invite colleagues from LinkedIn to support me.

<ul>
<li>It should support linking to the player&rsquo;s LinkedIn account.</li>
<li>It should display the player&rsquo;s LinkedIn connections.</li>
<li>It should support selecting one or more connections to invite.</li>
<li>It should create a support request for connections that have an account.</li>
<li>It should send an email invitation to the service for connections that do
not have an account.</li>
</ul>
</li>
<li>As a player, I want to invite family and friends from Facebook to support me.

<ul>
<li>It should support linking to the player&rsquo;s Facebook account.</li>
<li>It should display the player&rsquo;s Facebook friends.</li>
<li>It should support selecting one or more friends to invite.</li>
<li>It should create a support request for friends that have an account.</li>
<li>It should send an email invitation to the service for friends that do
not have an account.</li>
</ul>
</li>
</ul>


<h2>Future Features</h2>

<ul>
<li>keyboard shortcuts</li>
<li>email tasks</li>
<li>shared inventories</li>
<li>advanced search/filtering of tasks</li>
<li>task comments</li>
<li>integration with issue tracking and project management services</li>
<li>organization volume discounts</li>
<li>cooperative and head-to-head gameplay</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Manage All Application Environments With Vagrant]]></title>
    <link href="http://smdahlen.github.com/blog/2013/04/12/manage-all-application-environments-with-vagrant/"/>
    <updated>2013-04-12T13:53:00-04:00</updated>
    <id>http://smdahlen.github.com/blog/2013/04/12/manage-all-application-environments-with-vagrant</id>
    <content type="html"><![CDATA[<p>What if I could use <a href="http://www.vagrantup.com/">Vagrant</a> to configure and create reproducible
environments for development, test, and production? This is the question I
thought to myself while working on the <a href="http://shawn.dahlen.me/blog/2013/03/05/prepare-business-operations/">planned activity</a> to setup a
MongoDb cluster. After spending time testing the cluster with VirtualBox and
Vagrant and then switching to <a href="https://github.com/matschaffer/knife-solo">knife-solo</a> to bootstrap droplets on
Digital Ocean, I opted to dig further into my question.</p>

<!-- more -->


<p>With the release of Vagrant 1.1 in mid-March, it was now possible to manage
virtual machines backed by providers other than VirtualBox. HashiCorp, the
creator of Vagrant, provided a <a href="http://www.hashicorp.com/blog/preview-vagrant-aws.html">compelling preview</a> showcasing Vagrant
managing Amazon EC2 servers. The timing was right to investigate the
possibility of using Vagrant as <em>the tool</em> to define my environment and
subsequently set it up on either VirtualBox or Digital Ocean. As such, I
redirected my remaining few weeks for the first sprint to tackle this challenge.</p>

<h2>Value &amp; Exit Criteria</h2>

<p>Chef had proven extremely useful for defining configuration for
individual servers. Vagrant would compliment Chef by providing a common,
consistent interface for managing an environment of servers. This would help
further minimize system regressions and reduce the operational cost for managing
multiple environments.</p>

<p>To claim success on the task, I defined the end state. As a developer and
administrator, I wanted to run the following commands to stand up a
six-server environment with VirtualBox or Digital Ocean respectively:</p>

<pre><code>$ vagrant up --provider=[virtualbox|digital_ocean] --no-provision
$ vagrant provision
$ curl http://&lt;proxy&gt;/api/tasks
</code></pre>

<p>The environment had to be defined with a single <code>Vagrantfile</code> creating a proxy
server, two Node.js application servers, and a MongoDb replica set. After
provisioning with a single Chef application cookbook, the system had to be
fully operational accepting requests.</p>

<h2>Vagrant Plugins</h2>

<p>In my previous job, we had used Vagrant to create reproducible development
environments for the development team. Beyond creating a basic <code>Vagrantfile</code>
to spin up a machine provisioned with Puppet or Chef, my knowledge of Vagrant
was limited. As I dove into the internals of Vagrant to meet my objective, I
was pleasantly surprised to find an extensible plugin framework. The framework
supports new configuration, commands, virtual machine providers, and
action hooks. In fact, most of Vagrant&rsquo;s built-in features are implemented
as plugins.</p>

<p>Operational use cases for creating and managing an environment
could be implemented as a set of plugins. I looked to reuse existing ones where
possible and created new ones when needed. The four plugins that helped
achieve my objective are discussed below.</p>

<h2>Digital Ocean Provider Plugin</h2>

<p>To create, rebuild, and destroy Digital Ocean droplets, I needed a Vagrant
<a href="http://docs.vagrantup.com/v2/plugins/providers.html">provider plugin</a>. Luckily, <a href="https://twitter.com/johnbender">John Bender</a> had already established a GitHub
project that delivered the basic functionality. Unfortunately, it was missing
support for SSH keys (it used the insecure Vagrant key) and relied on a root
account for subsequent provisioning. John was gracious enough to support my
modifications ultimately transitioning the <a href="https://github.com/smdahlen/vagrant-digitalocean">project</a> over to me. Adding
features to this plugin was a great exercise in understanding the fundamentals
of Vagrant and I highly recommend anyone interested to browse the source code.</p>

<p>As of today, the plugin provides the following features:</p>

<ul>
<li>create and destroy droplet instances</li>
<li>rebuild a droplet instance while retaining its assigned IP address (custom
command)</li>
<li>power on and off a droplet instance</li>
<li>setup a SSH public key for authentication</li>
<li>create a new user account during droplet creation (allowing me to disable
the root account during provisioning)</li>
<li>provision a droplet with the shell or Chef</li>
</ul>


<p>While this plugin met 80% of my objective, creating new droplet instances
introduced a problem. An IP address is not assigned to a droplet until after
it is created, however, my Chef recipes required knowledge of it upfront.</p>

<h2>Host Manager Plugin</h2>

<p>To solve this dilemma, I opted to reference servers in my Chef recipes using
host names and leverage a Vagrant plugin to synchronize a <code>/etc/hosts</code> file across
the environment to resolve the names. I created a Vagrant 1.1 compliant
plugin, <a href="https://github.com/smdahlen/vagrant-hostmanager">vagrant-hostmanager</a>, that hooked into the <code>up</code> action for a new
server. After server creation, a line containing the server&rsquo;s new
IP address and host name is added to the <code>/etc/hosts</code> file of each active
server within the Vagrant environment. Once the <code>vagrant up</code> command completes,
all servers defined within the <code>Vagrantfile</code> can resolve to one another using
host names.</p>

<p>Due to this approach, I had to disable provisioning when calling <code>vagrant up</code>.
That is why my end state included the <code>--no-provision</code> switch and a second
command to provision the servers.</p>

<h2>MongoDb Plugin</h2>

<p>Now that servers within my Digital Ocean environment could resolve to one
another, I could move forward with configuring a replica set. Before I had
started my investigation into Vagrant, I had attempted to use the <a href="https://github.com/edelight/chef-mongodb">mongodb</a>
cookbook. Unfortunately, the cookbook required a Chef server to search for
replica set members and I had <a href="http://shawn.dahlen.me/blog/2013/03/06/automate-provisioning-of-secure-servers/">opted for Chef solo</a> a few weeks earlier.
Additionally, it felt awkward that a recipe provisioning a single MongoDb
replica set member would also attempt to initiate a replica set if all
members were available.</p>

<p>A Vagrant plugin seemed to be a better fit &mdash; it had access to the
<code>Vagrantfile</code> containing configuration for all servers in the environment and
therefore could act on the environment itself. I created a plugin,
<a href="https://github.com/smdahlen/vagrant-mongodb">vagrant-mongodb</a>, that provided an adminstrator with new configuration
options in the <code>Vagrantfile</code> to describe a replica set. Here is a brief example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">mongodb</span><span class="o">.</span><span class="n">replset</span> <span class="ss">:rs0</span> <span class="k">do</span> <span class="o">|</span><span class="n">rs</span><span class="o">|</span>
</span><span class='line'>  <span class="n">rs</span><span class="o">.</span><span class="n">member</span> <span class="ss">:db0</span><span class="p">,</span> <span class="ss">:priority</span> <span class="o">=&gt;</span> <span class="mi">0</span><span class="p">,</span> <span class="n">arbiter</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>  <span class="n">rs</span><span class="o">.</span><span class="n">member</span> <span class="ss">:db1</span><span class="p">,</span> <span class="ss">:priority</span> <span class="o">=&gt;</span> <span class="mi">1</span>
</span><span class='line'>  <span class="n">rs</span><span class="o">.</span><span class="n">member</span> <span class="ss">:db2</span><span class="p">,</span> <span class="ss">:priority</span> <span class="o">=&gt;</span> <span class="mi">2</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>With a replica set defined within a <code>Vagrantfile</code>, the plugin will check
if all members are available, and if so, initiate it. By default,
this happens automatically after executing <code>vagrant provision</code>, although this
behavior may be disabled and a custom command executed instead.</p>

<h2>Berkshelf Plugin</h2>

<p>With the three plugins above, I could now meet my objective. However, I took
the time to clean up my use of Chef from earlier weeks. Since I was replacing
aspects of <code>knife-solo</code> with Vagrant, I had the opportunity to use
<a href="http://berkshelf.com/">Berkshelf</a> for cookbook dependency management. I collapsed my
<code>marinara-kitchen</code> project into a single application cookbook called
<code>marinara-cookbook</code> containing the recipes I wrote earlier. I defined my
cookbook&rsquo;s dependencies in the <code>metadata.rb</code> file:</p>

<figure class='code'><figcaption><span>metadata.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">name</span>             <span class="s1">&#39;marinara&#39;</span>
</span><span class='line'><span class="n">maintainer</span>       <span class="s1">&#39;Whimsical Bits, Ltd.&#39;</span>
</span><span class='line'><span class="n">maintainer_email</span> <span class="s1">&#39;shawn@dahlen.me&#39;</span>
</span><span class='line'><span class="n">license</span>          <span class="s1">&#39;All rights reserved&#39;</span>
</span><span class='line'><span class="n">description</span>      <span class="s1">&#39;Provisions the Marinara application&#39;</span>
</span><span class='line'><span class="n">long_description</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="s1">&#39;README.md&#39;</span><span class="p">))</span>
</span><span class='line'><span class="n">version</span>          <span class="s1">&#39;0.1.0&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.3.0&#39;</span>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;homesick&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.3.2&#39;</span>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;openssh&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.1.4&#39;</span>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;simple_iptables&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.2.4&#39;</span>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;nodejs&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.1.1&#39;</span>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;npm&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.1.1&#39;</span>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;haproxy&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.2.0&#39;</span>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;apt&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.9.0&#39;</span>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;sudo&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 2.0.4&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>With the Berkshelf Vagrant <a href="https://github.com/riotgames/berkshelf-vagrant">plugin</a> installed, all cookbook dependencies
are automatically available to each server during the provisioning process.</p>

<h2>Vagrantfile</h2>

<p>With plugins to manage Digital Ocean droplets, synchronize a <code>/etc/hosts</code> file
for server resolution, and initiate MongoDb replica sets, I was ready to
define my application&rsquo;s environment in a single <code>Vagrantfile</code>. Below is my
file that works with both VirtualBox and Digital Ocean (with a few manual
tweaks required until Vagrant 1.2 is released):</p>

<figure class='code'><figcaption><span>Vagrantfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># define the number of application and database servers</span>
</span><span class='line'><span class="n">app_servers</span> <span class="o">=</span> <span class="mi">2</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="s2">&quot;app</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'><span class="n">db_servers</span> <span class="o">=</span> <span class="mi">3</span><span class="o">.</span><span class="n">times</span><span class="o">.</span><span class="n">map</span> <span class="p">{</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span> <span class="s2">&quot;db</span><span class="si">#{</span><span class="n">i</span><span class="si">}</span><span class="s2">&quot;</span> <span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s1">&#39;2&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="c1"># define the user account and ssh key to authenticate with</span>
</span><span class='line'>  <span class="c1"># NOTE: these can be replaced with environment variables to allow a</span>
</span><span class='line'>  <span class="c1"># continuous integration server to also create and provision environments</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">username</span> <span class="o">=</span> <span class="s1">&#39;smdahlen&#39;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">private_key_path</span> <span class="o">=</span> <span class="s1">&#39;~/.ssh/id_rsa&#39;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">forward_agent</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># disable snycing of the root project folder</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">synced_folder</span> <span class="s1">&#39;/vagrant&#39;</span><span class="p">,</span> <span class="s1">&#39;.&#39;</span><span class="p">,</span> <span class="ss">:id</span> <span class="o">=&gt;</span> <span class="s1">&#39;vagrant-root&#39;</span><span class="p">,</span> <span class="ss">:disabled</span> <span class="o">=&gt;</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># TODO move into provider override when Vagrant 1.2 is released</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">hostmanager</span><span class="o">.</span><span class="n">ignore_private_ip</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># define the base box for virtual box</span>
</span><span class='line'>  <span class="c1"># TODO move into provider override when Vagrant 1.2 is released</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s1">&#39;precise64-chef11.2&#39;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s1">&#39;https://opscode-vm.s3.amazonaws.com/vagrant/opscode_ubuntu-12.04_chef-11.2.0.box&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># define virtual box provider defaults</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>
</span><span class='line'>    <span class="n">vb</span><span class="o">.</span><span class="n">customize</span> <span class="o">[</span>
</span><span class='line'>      <span class="s1">&#39;setextradata&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">:id</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root&#39;</span><span class="p">,</span>
</span><span class='line'>      <span class="s1">&#39;1&#39;</span>
</span><span class='line'>    <span class="o">]</span>
</span><span class='line'>    <span class="n">vb</span><span class="o">.</span><span class="n">customize</span> <span class="o">[</span><span class="s1">&#39;modifyvm&#39;</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="s1">&#39;--memory&#39;</span><span class="p">,</span> <span class="s1">&#39;512&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="n">vb</span><span class="o">.</span><span class="n">customize</span> <span class="o">[</span><span class="s1">&#39;modifyvm&#39;</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="s1">&#39;--cpus&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># define digital ocean provider defaults</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:digital_ocean</span> <span class="k">do</span> <span class="o">|</span><span class="n">ocean</span><span class="o">|</span>
</span><span class='line'>    <span class="n">ocean</span><span class="o">.</span><span class="n">client_id</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DO_CLIENT_ID&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="n">ocean</span><span class="o">.</span><span class="n">api_key</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;DO_API_KEY&#39;</span><span class="o">]</span>
</span><span class='line'>    <span class="n">ocean</span><span class="o">.</span><span class="n">ssh_key_name</span> <span class="o">=</span> <span class="s1">&#39;MacBook Pro&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># define the proxy server</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="ss">:proxy</span> <span class="k">do</span> <span class="o">|</span><span class="n">proxy</span><span class="o">|</span>
</span><span class='line'>    <span class="n">proxy</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">hostname</span> <span class="o">=</span> <span class="s1">&#39;proxy&#39;</span>
</span><span class='line'>    <span class="n">proxy</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s1">&#39;10.0.5.2&#39;</span>
</span><span class='line'>    <span class="n">proxy</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:chef_solo</span> <span class="k">do</span> <span class="o">|</span><span class="n">chef</span><span class="o">|</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">data_bags_path</span> <span class="o">=</span> <span class="s1">&#39;data_bags&#39;</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::default&#39;</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::proxy&#39;</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="ss">marinara</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">application</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="ss">servers</span><span class="p">:</span> <span class="n">app_servers</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># define the application servers</span>
</span><span class='line'>  <span class="n">app_servers</span><span class="o">.</span><span class="n">each_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">index</span><span class="o">|</span>
</span><span class='line'>    <span class="n">ip</span> <span class="o">=</span> <span class="s2">&quot;10.0.5.</span><span class="si">#{</span><span class="n">index</span> <span class="o">+</span> <span class="mi">3</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="n">app_servers</span><span class="o">[</span><span class="n">index</span><span class="o">]</span> <span class="k">do</span> <span class="o">|</span><span class="n">app</span><span class="o">|</span>
</span><span class='line'>      <span class="n">app</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">hostname</span> <span class="o">=</span> <span class="n">app_servers</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>      <span class="n">app</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="n">ip</span>
</span><span class='line'>      <span class="n">app</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:chef_solo</span> <span class="k">do</span> <span class="o">|</span><span class="n">chef</span><span class="o">|</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">data_bags_path</span> <span class="o">=</span> <span class="s1">&#39;data_bags&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::default&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::application&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">marinara</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="ss">application</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="ss">reference</span><span class="p">:</span> <span class="s1">&#39;develop&#39;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="ss">proxy</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="ss">server</span><span class="p">:</span> <span class="s1">&#39;proxy&#39;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="ss">database</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="ss">servers</span><span class="p">:</span> <span class="n">db_servers</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># define the database servers</span>
</span><span class='line'>  <span class="n">db_servers</span><span class="o">.</span><span class="n">each_index</span> <span class="k">do</span> <span class="o">|</span><span class="n">index</span><span class="o">|</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">mongodb</span><span class="o">.</span><span class="n">replset</span> <span class="ss">:rs0</span> <span class="k">do</span> <span class="o">|</span><span class="n">rs</span><span class="o">|</span>
</span><span class='line'>      <span class="n">rs</span><span class="o">.</span><span class="n">ignore_private_ip</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>      <span class="n">rs</span><span class="o">.</span><span class="n">member</span> <span class="n">db_servers</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">ip</span> <span class="o">=</span> <span class="s2">&quot;10.0.5.</span><span class="si">#{</span><span class="n">index</span> <span class="o">+</span> <span class="n">app_servers</span><span class="o">.</span><span class="n">size</span> <span class="o">+</span> <span class="mi">3</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="n">db_servers</span><span class="o">[</span><span class="n">index</span><span class="o">]</span> <span class="k">do</span> <span class="o">|</span><span class="n">db</span><span class="o">|</span>
</span><span class='line'>      <span class="n">db</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">hostname</span> <span class="o">=</span> <span class="n">db_servers</span><span class="o">[</span><span class="n">index</span><span class="o">]</span>
</span><span class='line'>      <span class="n">db</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">:ip</span> <span class="o">=&gt;</span> <span class="n">ip</span>
</span><span class='line'>      <span class="n">db</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:chef_solo</span> <span class="k">do</span> <span class="o">|</span><span class="n">chef</span><span class="o">|</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">data_bags_path</span> <span class="o">=</span> <span class="s1">&#39;data_bags&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::default&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::database&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">marinara</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="ss">application</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="ss">servers</span><span class="p">:</span> <span class="n">app_servers</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="ss">database</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="ss">replset</span><span class="p">:</span> <span class="s1">&#39;rs0&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="ss">servers</span><span class="p">:</span> <span class="n">db_servers</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>You will note the declaration of private networks and static IP addresses
in the file. This enables the machines to communicate with one another
when running locally using VirtualBox. Currently, I have to ignore the
private IP addresses when using Digital Ocean.</p>

<h2>Vagrant 1.2</h2>

<p>When Vagrant 1.2 is released, a user will be able to configure
override attributes for a specific provider. In the file above, I can move
the <code>ignore_private_ip</code> configuration into the Digital Ocean provider without
manually changing values.</p>

<p>More importantly, Vagrant 1.2 introduces the possibility of executing actions
in parallel for a multi-server environment. This will cut down my current time
to build a new six-server environment from 15 minutes to ~3 minutes.</p>

<h2>What&rsquo;s Next</h2>

<p>Overall, I&rsquo;m quite pleased with the outcome. With this sprint complete, I
can now create and manage a multi-server environment for development, test, and
production with the combination of Vagrant and Chef. Over the next six weeks
I&rsquo;ll be shifting my focus from infrastructure to product management
defining my product&rsquo;s scope and drafting a user experience in preparation
for development. Stay tuned for more.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup node.js Servers Within a Load-balanced Configuration]]></title>
    <link href="http://smdahlen.github.com/blog/2013/03/18/setup-node-dot-js-servers-within-a-load-balanced-configuration/"/>
    <updated>2013-03-18T13:21:00-04:00</updated>
    <id>http://smdahlen.github.com/blog/2013/03/18/setup-node-dot-js-servers-within-a-load-balanced-configuration</id>
    <content type="html"><![CDATA[<p>With an excellent <a href="http://shawn.dahlen.me/blog/2013/03/06/automate-provisioning-of-secure-servers/">foundation</a> in place to automate provisioning of secure
servers with Chef, I spent week two establishing an application project
structure using the <a href="http://nodejs.org/">Node.js</a> platform. Additionally, I setup a load
balancer configuration with <a href="http://haproxy.1wt.eu/">HAProxy</a> and tested it using a local
multi-machine <a href="http://www.vagrantup.com/">Vagrant</a> environment. Read on to find out details about
this setup.</p>

<!-- more -->


<h2>Value &amp; Exit Criteria</h2>

<p>As I mentioned in my <a href="http://shawn.dahlen.me/blog/2013/03/06/automate-provisioning-of-secure-servers/">previous post</a>, I start each week defining the
business value for the task at hand coupled with concise exit criteria to
know when I&rsquo;m done. This week&rsquo;s task will ensure the conversion rate for
subscribers is not impacted as the product usage grows. I consider the
first impression of the product&rsquo;s experience extremely important and I don&rsquo;t
want to see that disrupted as I try to scale a system in production.</p>

<p>To complete the task, four critera had to be met:</p>

<ul>
<li>Setup a project structure for Node.js supporting a rapid development workflow
and optimized production deployment.</li>
<li>Implement a Chef recipe to provision the Node.js application.</li>
<li>Implement a Chef recipe to provision HAProxy configured to load balance
multiple Node.js application servers.</li>
<li>Test the Chef recipes using a local multi-machine Vagrant environment.</li>
</ul>


<h2>Setup a Node.js Project</h2>

<p>Given my experience with Node.js from my previous job at Lockheed Martin, I
selected it as the platform to build my product. I intend to implement a
thin server architecture supporting a <a href="http://en.wikipedia.org/wiki/Single-page_application">single-page application</a>.
Essentially, all the user interface logic will reside on the client using
JavaScript libraries such as <a href="http://jquery.com/">jQuery</a>, <a href="http://requirejs.org/">require.js</a>, and
<a href="http://documentcloud.github.com/backbone/">Backbone</a>. The user interface will query an API layer built on the
<a href="http://expressjs.com/">Express</a> web application framework for Node.js.</p>

<p>Below is a step-by-step guide to setup a basic Node.js project using these
libraries. It assumes that Node.js and npm are installed.</p>

<ul>
<li><strong>Setup Express.</strong> I began by creating a new directory, <em>marinara</em>, and
initialized it as a git repository. Next, I created the <em>package.json</em> file
which defines metadata for the project including its dependencies. Within that
file I specified the Express version I required and then installed it
using <a href="https://npmjs.org/">npm</a>.</li>
</ul>


<figure class='code'><figcaption><span>package.json </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;marinara&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;version&quot;</span><span class="o">:</span> <span class="s2">&quot;0.1.0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;engines&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;node&quot;</span><span class="o">:</span> <span class="s2">&quot;0.10.x&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s2">&quot;dependencies&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;express&quot;</span><span class="o">:</span> <span class="s2">&quot;~3.1.0&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;log&quot;</span><span class="o">:</span> <span class="s2">&quot;~1.3.1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;underscore&quot;</span><span class="o">:</span> <span class="s2">&quot;~1.4.4&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;consolidate&quot;</span><span class="o">:</span> <span class="s2">&quot;~0.8.0&quot;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="s2">&quot;devDependencies&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install</span></code></pre></td></tr></table></div></figure>


<p>  With Express installed, I created a <em>server.js</em> file at the root of the
  project directory and implemented a basic application with a simple logging
  and configuration strategy. Specifically, I defined configuration through
  environment variables (with suitable defaults) that will later be set with an
  <a href="http://upstart.ubuntu.com/cookbook/">Upstart</a> script. I leveraged the <a href="https://github.com/visionmedia/log.js/">log.js</a> module to write messages
  using the log levels specified by syslog that will later be consolidated with
  an <a href="http://www.rsyslog.com/">rsyslog</a> server.</p>

<figure class='code'><figcaption><span>server.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;express&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">Log</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;log&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">api</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./lib/api&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">pkg</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;./package.json&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// defines app settings with default values</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;log level&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">MARINARA_LOG_LEVEL</span> <span class="o">||</span> <span class="nx">Log</span><span class="p">.</span><span class="nx">DEBUG</span><span class="p">);</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;session secret&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">MARINARA_SESSION_SECRET</span> <span class="o">||</span> <span class="s1">&#39;secret&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;session age&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">MARINARA_SESSION_AGE</span> <span class="o">||</span> <span class="mi">3600</span><span class="p">);</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;port&#39;</span><span class="p">,</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">MARINARA_PORT</span> <span class="o">||</span> <span class="mi">8000</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// configures default logger available for middleware and requests</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">,</span> <span class="nx">next</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">req</span><span class="p">.</span><span class="nx">log</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Log</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;log level&#39;</span><span class="p">));</span>
</span><span class='line'>    <span class="nx">next</span><span class="p">();</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// logs all requests if log level is INFO or higher using log module format</span>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;log level&#39;</span><span class="p">)</span> <span class="o">&gt;=</span> <span class="nx">Log</span><span class="p">.</span><span class="nx">INFO</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">format</span> <span class="o">=</span> <span class="s1">&#39;[:date] INFO :remote-addr - :method :url &#39;</span> <span class="o">+</span>
</span><span class='line'>                 <span class="s1">&#39;:status :res[content-length] - :response-time ms&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">express</span><span class="p">.</span><span class="nx">logger</span><span class="p">.</span><span class="nx">token</span><span class="p">(</span><span class="s1">&#39;date&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="k">return</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span> <span class="p">});</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">logger</span><span class="p">(</span><span class="nx">format</span><span class="p">));</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// TODO: setup cluster support</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">listen</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;port&#39;</span><span class="p">));</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Serve static assets and api requests.</strong> With the basic application
structure complete, I implmented support to serve static assets both in
development and production. During development, static assets are served
from the <em>app/</em> directory using require.js to keep code modular. For
production, assets are optimized (concatnated and minified) and placed in
the <em>public/</em> directory. The single html page, <em>index.html</em>, is an
<a href="http://underscorejs.org/#template">underscore.js micro-template</a> that replaces script and stylesheet
references depending on the mode.</li>
</ul>


<figure class='code'><figcaption><span>server.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// configures underscore view engine</span>
</span><span class='line'><span class="c1">// TODO: set caching for production</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">engine</span><span class="p">(</span><span class="s1">&#39;html&#39;</span><span class="p">,</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;consolidate&#39;</span><span class="p">).</span><span class="nx">underscore</span><span class="p">);</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;view engine&#39;</span><span class="p">,</span> <span class="s1">&#39;html&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s1">&#39;views&#39;</span><span class="p">,</span> <span class="nx">__dirname</span> <span class="o">+</span> <span class="s1">&#39;/templates&#39;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// enables compression for all requests</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">compress</span><span class="p">());</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// serves index and static assets from app/ directory in development</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">configure</span><span class="p">(</span><span class="s1">&#39;development&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">res</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">jsFile</span><span class="o">:</span> <span class="s1">&#39;public/components/requirejs/require.js&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">cssFile</span><span class="o">:</span> <span class="s1">&#39;public/styles/main.css&#39;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/public&#39;</span><span class="p">,</span> <span class="nx">express</span><span class="p">.</span><span class="kr">static</span><span class="p">(</span><span class="nx">__dirname</span> <span class="o">+</span> <span class="s1">&#39;/app&#39;</span><span class="p">));</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="c1">// serves index and static assets from optimized public/ directory in prod</span>
</span><span class='line'><span class="c1">// TODO: replace staticCache middleware with varnish</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">configure</span><span class="p">(</span><span class="s1">&#39;production&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">oneYear</span> <span class="o">=</span> <span class="mi">60</span><span class="o">*</span><span class="mi">60</span><span class="o">*</span><span class="mi">24</span><span class="o">*</span><span class="mi">365</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">baseFile</span> <span class="o">=</span> <span class="s1">&#39;public/&#39;</span> <span class="o">+</span> <span class="nx">pkg</span><span class="p">.</span><span class="nx">name</span> <span class="o">+</span> <span class="s1">&#39;-&#39;</span> <span class="o">+</span> <span class="nx">pkg</span><span class="p">.</span><span class="nx">version</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">res</span><span class="p">.</span><span class="nx">render</span><span class="p">(</span><span class="s1">&#39;index&#39;</span><span class="p">,</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">jsFile</span><span class="o">:</span> <span class="nx">baseFile</span> <span class="o">+</span> <span class="s1">&#39;.min.js&#39;</span><span class="p">,</span>
</span><span class='line'>            <span class="nx">cssFile</span><span class="o">:</span> <span class="nx">baseFile</span> <span class="o">+</span> <span class="s1">&#39;.min.css&#39;</span>
</span><span class='line'>        <span class="p">});</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/public&#39;</span><span class="p">,</span> <span class="nx">express</span><span class="p">.</span><span class="nx">staticCache</span><span class="p">());</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/public&#39;</span><span class="p">,</span> <span class="nx">express</span><span class="p">.</span><span class="kr">static</span><span class="p">(</span><span class="nx">__dirname</span> <span class="o">+</span> <span class="s1">&#39;/public&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">maxAge</span><span class="o">:</span> <span class="nx">oneYear</span> <span class="p">}));</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>templates/index.html </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="cp">&lt;!DOCTYPE html&gt;</span>
</span><span class='line'><span class="nt">&lt;html</span> <span class="na">lang=</span><span class="s">&quot;en&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;head&gt;</span>
</span><span class='line'>    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">&quot;UTF-8&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;title&gt;</span>Marinara<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>    <span class="nt">&lt;link</span> <span class="na">type=</span><span class="s">&quot;text/css&quot;</span> <span class="na">rel=</span><span class="s">&quot;stylesheet&quot;</span> <span class="na">href=</span><span class="s">&quot;&lt;%= cssFile %&gt;&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/head&gt;</span>
</span><span class='line'><span class="nt">&lt;body&gt;</span>
</span><span class='line'>    <span class="nt">&lt;script </span><span class="na">data-main=</span><span class="s">&quot;public/scripts/main&quot;</span> <span class="na">src=</span><span class="s">&quot;&lt;%= jsFile %&gt;&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;/body&gt;</span>
</span><span class='line'><span class="nt">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>  While I have not flushed out the api for the product yet, I went ahead and
  stubbed out a basic implementation. I created a sub-application in
  <em>lib/api.js</em> where I configured middleware to handle secure cookie sessions,
  cross-site request forgery, and body parsing. This sub-application is
  exported and mounted at the <em>/api</em> path on the main Express application in
  <em>server.js</em>.</p>

<figure class='code'><figcaption><span>lib/api.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">express</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;express&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">app</span> <span class="o">=</span> <span class="nx">express</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">cookieParser</span><span class="p">());</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">cookieSession</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">secret</span><span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">sessionSecret</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">cookie</span><span class="o">:</span> <span class="p">{</span> <span class="nx">maxAge</span><span class="o">:</span> <span class="nx">options</span><span class="p">.</span><span class="nx">sessionAge</span> <span class="p">}</span>
</span><span class='line'>    <span class="p">}));</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">bodyParser</span><span class="p">());</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">express</span><span class="p">.</span><span class="nx">csrf</span><span class="p">());</span>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="nx">app</span><span class="p">.</span><span class="nx">router</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/hello&#39;</span><span class="p">,</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">req</span><span class="p">,</span> <span class="nx">res</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">req</span><span class="p">.</span><span class="nx">log</span><span class="p">.</span><span class="nx">debug</span><span class="p">(</span><span class="s1">&#39;serving /api/hello request&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="nx">res</span><span class="p">.</span><span class="nx">send</span><span class="p">(</span><span class="s1">&#39;Hello Shawn&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">app</span><span class="p">;</span>
</span><span class='line'><span class="p">};</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>server.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// mounts and configures rest api</span>
</span><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">use</span><span class="p">(</span><span class="s1">&#39;/api&#39;</span><span class="p">,</span> <span class="nx">api</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">sessionSecret</span><span class="o">:</span> <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;session secret&#39;</span><span class="p">),</span>
</span><span class='line'>    <span class="nx">sessionAge</span><span class="o">:</span> <span class="nx">app</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;session age&#39;</span><span class="p">)</span>
</span><span class='line'><span class="p">}));</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Setup Bower and install client dependencies.</strong> With the server ready to
handle requests, I shifted to the client-side by defining libraries in
<em>component.json</em> that <a href="http://twitter.github.com/bower/">Bower</a>, a browser package manager, would install.
(I will discuss the installation of Bower shortly). I configured Bower
(in the <em>.bowerrc</em> file) to install libraries to <em>app/components</em> so they
could be served by Express during development.</li>
</ul>


<figure class='code'><figcaption><span>component.json </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;marinara&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;version&quot;</span><span class="o">:</span> <span class="s2">&quot;0.1.0&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;dependencies&quot;</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="s2">&quot;requirejs&quot;</span><span class="o">:</span> <span class="s2">&quot;~2.1.5&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;jquery&quot;</span><span class="o">:</span> <span class="s2">&quot;~1.9.1&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;backbone&quot;</span><span class="o">:</span> <span class="s2">&quot;~0.9.10&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;underscore&quot;</span><span class="o">:</span> <span class="s2">&quot;~1.4.4&quot;</span><span class="p">,</span>
</span><span class='line'>        <span class="s2">&quot;almond&quot;</span><span class="o">:</span> <span class="s2">&quot;~0.2.5&quot;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>.bowerrc </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;directory&quot;</span><span class="o">:</span> <span class="s2">&quot;app/components&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bower install</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Setup require.js configuration and main entry point.</strong> As I mentioned
earlier, require.js supports modular development of both css and javascript.
I went ahead and defined a main entry point for require.js, <em>main.js</em>,
which includes configuration to use the libraries installed by Bower. I also
stubbed out a simple Backbone view to test asset optimization later on.</li>
</ul>


<figure class='code'><figcaption><span>app/scripts/main.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">requirejs</span><span class="p">.</span><span class="nx">config</span><span class="p">({</span>
</span><span class='line'>    <span class="nx">paths</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">jquery</span><span class="o">:</span> <span class="s1">&#39;../components/jquery/jquery&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">backbone</span><span class="o">:</span> <span class="s1">&#39;../components/backbone/backbone&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">underscore</span><span class="o">:</span> <span class="s1">&#39;../components/underscore/underscore&#39;</span>
</span><span class='line'>    <span class="p">},</span>
</span><span class='line'>    <span class="nx">shim</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">backbone</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">deps</span><span class="o">:</span> <span class="p">[</span><span class="s1">&#39;underscore&#39;</span><span class="p">,</span> <span class="s1">&#39;jquery&#39;</span><span class="p">],</span>
</span><span class='line'>            <span class="nx">exports</span><span class="o">:</span> <span class="s1">&#39;Backbone&#39;</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nx">underscore</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">exports</span><span class="o">:</span> <span class="s1">&#39;_&#39;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">require</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span> <span class="s1">&#39;marinara&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">marinara</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">view</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">marinara</span><span class="p">.</span><span class="nx">SampleView</span><span class="p">();</span>
</span><span class='line'>    <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">html</span><span class="p">(</span><span class="nx">view</span><span class="p">.</span><span class="nx">render</span><span class="p">().</span><span class="nx">el</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>app/scripts/marinara.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">define</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">,</span> <span class="s1">&#39;backbone&#39;</span><span class="p">,</span> <span class="s1">&#39;underscore&#39;</span><span class="p">],</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">,</span> <span class="nx">Backbone</span><span class="p">,</span> <span class="nx">_</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="s1">&#39;use strict&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">exports</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">SampleView</span> <span class="o">=</span> <span class="nx">exports</span><span class="p">.</span><span class="nx">SampleView</span> <span class="o">=</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">View</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span>
</span><span class='line'>        <span class="nx">id</span><span class="o">:</span> <span class="s1">&#39;sample&#39;</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">template</span><span class="o">:</span> <span class="nx">_</span><span class="p">.</span><span class="nx">template</span><span class="p">(</span><span class="s1">&#39;&lt;h1&gt;&lt;%= msg %&gt;&lt;/h1&gt;&#39;</span><span class="p">),</span>
</span><span class='line'>        <span class="nx">events</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="s1">&#39;click&#39;</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span> <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;Hello Shawn.&#39;</span><span class="p">);</span> <span class="p">}</span>
</span><span class='line'>        <span class="p">},</span>
</span><span class='line'>        <span class="nx">render</span><span class="o">:</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">this</span><span class="p">.</span><span class="nx">$el</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">template</span><span class="p">({</span> <span class="nx">msg</span><span class="o">:</span> <span class="s1">&#39;Click me please.&#39;</span> <span class="p">}));</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">this</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">return</span> <span class="nx">exports</span><span class="p">;</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><strong>Setup Grunt.js build system.</strong> To test changes during development, I setup
an automated watch and reload workflow using <a href="http://gruntjs.com/">Grunt</a>. When files change
in the <em>app/</em> directory, I automatically reload the browser window with the
<a href="http://livereload.com/">LiveReload</a> Chrome extension. When javascript files change in the <em>/</em> or
<em>lib/</em> directories, I restart the Node.js server using Upstart. Additionally,
I also lint both css and javascript files when changes occur. To kickoff this
workflow, I run <em>grunt</em> in the root directory.</p>

<p>I also used Grunt to optimize static assets. The <em>grunt-contrib-requirejs</em>
plugin uses require.js&rsquo;s <a href="http://requirejs.org/docs/optimization.html">optimizer</a> to concatnate and minify javascript.
It also concatnate&rsquo;s css by scanning for <em>@import</em> statements. I paired this
with the <em>grunt-contrib-cssmin</em> plugin to minify css assets. To optimize
assets and move them into the <em>public/</em> directory to be served by Express,
I run:</p></li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ grunt optimize</span></code></pre></td></tr></table></div></figure>


<p>  Check out this <a href="https://gist.github.com/smdahlen/5190695">gist</a> for the <em>Gruntfile.js</em> that supports this setup.
  With the build system complete, the first exit criteria was met.</p>

<h2>Implement Chef Application Recipe</h2>

<p>With the Node.js project structure complete, I shifted back to the
<em>marinara-kitchen</em> repository I worked on in the <a href="http://shawn.dahlen.me/blog/2013/03/06/automate-provisioning-of-secure-servers/">last post</a>. I created
a new recipe, <em>application.rb</em>, that would provision Node.js and related
dependencies and deploy the <em>marinara</em> git repository. Below is the
step-by-step guide to create the recipe:</p>

<ul>
<li><strong>Provision Node.js and npm packages.</strong> I leveraged the <a href="https://github.com/mdxp/nodejs-cookbook">nodejs</a> cookbook
to install Node.js and npm by source defining the default versions in the
<em>default.rb</em> attributes file. Additionally, I defined npm packages to be
installed globally on the server (Grunt, Bower) using the LWRP provided
by the <a href="https://github.com/balbeko/chef-npm/">npm</a> cookbook.</li>
</ul>


<figure class='code'><figcaption><span>site-cookbooks/marinara/attributes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># includes nodejs default attributes first to override them</span>
</span><span class='line'><span class="n">include_attribute</span> <span class="s1">&#39;nodejs&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># defines node.js and npm version configuration</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">nodejs</span><span class="o">.</span><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;0.10.0&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">nodejs</span><span class="o">.</span><span class="n">npm</span> <span class="o">=</span> <span class="s1">&#39;1.2.14&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># defines npm packages to install globally</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">npm_packages</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;grunt-cli&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;0.1.6&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="s1">&#39;bower&#39;</span>     <span class="o">=&gt;</span> <span class="s1">&#39;0.8.5&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>site-cookbooks/marinara/recipes/application.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># provisions node.js and npm</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s1">&#39;nodejs::install_from_source&#39;</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s1">&#39;nodejs::npm&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># provisions global npm packages</span>
</span><span class='line'><span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">npm_packages</span><span class="o">.</span><span class="n">each_pair</span> <span class="k">do</span> <span class="o">|</span><span class="n">pkg</span><span class="p">,</span> <span class="n">ver</span><span class="o">|</span>
</span><span class='line'>  <span class="n">npm_package</span> <span class="n">pkg</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">version</span> <span class="n">ver</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Provision Upstart script.</strong> Since I am using Ubuntu, I implemented an
Upstart script to manage the Node.js application as a service. As I mentioned
earlier, I configure the application using environment variables defined in
the Upstart script injected in by a Chef template. The template also
checks whether the application is being provisioned in production mode, and
if so, includes statements to start the service on startup and run under
an application-specific user account.</li>
</ul>


<figure class='code'><figcaption><span>site-cookbooks/marinara/templates/default/marinara.conf.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">description</span> <span class="s1">&#39;marinara upstart script&#39;</span>
</span><span class='line'><span class="n">author</span> <span class="s1">&#39;Shawn Dahlen &lt;shawn@dahlen.me&gt;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% if </span><span class="ow">not</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">development</span> <span class="o">-</span><span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">start on [2345]</span>
</span><span class='line'><span class="sx">setuid &lt;%= node.marinara.application.user %&gt;</span>
</span><span class='line'><span class="n">setgid</span> <span class="o">&lt;</span><span class="sx">%= node.marinara.application.user %&gt;</span>
</span><span class='line'><span class="sx">env NODE_ENV=</span><span class="n">production</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">-</span><span class="sx">%&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">env MARINARA_LOG_LEVEL=&lt;%= node.marinara.application.log_level %&gt;</span>
</span><span class='line'><span class="n">env</span> <span class="no">MARINARA_PORT</span><span class="o">=&lt;</span><span class="sx">%= node.marinara.application.port %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">stop on [06]</span>
</span><span class='line'>
</span><span class='line'><span class="sx">respawn</span>
</span><span class='line'>
</span><span class='line'><span class="sx">exec /usr/local/bin/node &lt;%=</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">deploy_path</span> <span class="sx">%&gt;/server.js &gt;</span> <span class="o">&lt;%=</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">log_path</span> <span class="sx">%&gt;/marinara.log 2&gt;</span><span class="o">&amp;</span><span class="mi">1</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>site-cookbooks/marinara/recipes/application.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># provisions upstart script</span>
</span><span class='line'><span class="n">template</span> <span class="s1">&#39;/etc/init/marinara.conf&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">source</span> <span class="s1">&#39;marinara.conf.erb&#39;</span>
</span><span class='line'>  <span class="n">mode</span> <span class="mo">0440</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Deploy application.</strong> If the application will be provisioned in
production mode (as opposed to development mode where Vagrant mounts the
project directory), the recipe provisions the application user, creates
the deployment and log directories, copies over a ssh deploy key, clones
the <em>marinara</em> git repository, install dependencies, and optimizes assets. A
number of default attributes drive the deployment &mdash; the most important
of which is the <em>reference</em> attribute defining the git tag or branch to
deploy.</li>
</ul>


<figure class='code'><figcaption><span>site-cookbooks/marinara/attributes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># defines marinara application deployment configuration</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">development</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span> <span class="o">=</span> <span class="s1">&#39;marinara&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">repository</span> <span class="o">=</span> <span class="s1">&#39;git@github.com:smdahlen/marinara.git&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">reference</span> <span class="o">=</span> <span class="s1">&#39;master&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">deploy_path</span> <span class="o">=</span> <span class="s1">&#39;/opt/marinara&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">log_path</span> <span class="o">=</span> <span class="s1">&#39;/var/log/marinara&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">log_level</span> <span class="o">=</span> <span class="mi">6</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">port</span> <span class="o">=</span> <span class="mi">8000</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">servers</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="s1">&#39;app0&#39;</span> <span class="o">=&gt;</span> <span class="s1">&#39;127.0.0.1&#39;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>site-cookbooks/marinara/recipes/application.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="ow">not</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">development</span>
</span><span class='line'>  <span class="c1"># stops marinara service if running</span>
</span><span class='line'>  <span class="n">service</span> <span class="s1">&#39;marinara&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">action</span> <span class="ss">:stop</span>
</span><span class='line'>    <span class="n">provider</span> <span class="ss">Chef</span><span class="p">:</span><span class="ss">:Provider</span><span class="o">::</span><span class="ss">Service</span><span class="p">:</span><span class="ss">:Upstart</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># provisions system user to run application</span>
</span><span class='line'>  <span class="n">user</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span> <span class="k">do</span>
</span><span class='line'>    <span class="nb">system</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">shell</span> <span class="s1">&#39;/bin/false&#39;</span>
</span><span class='line'>    <span class="n">home</span> <span class="s1">&#39;/home/marinara&#39;</span>
</span><span class='line'>    <span class="n">supports</span> <span class="n">manage_home</span><span class="p">:</span> <span class="kp">true</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># provisions deploy key and ssh wrapper</span>
</span><span class='line'>  <span class="n">cookbook_file</span> <span class="s1">&#39;/tmp/deploy_id_rsa&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">source</span> <span class="s1">&#39;deploy_id_rsa&#39;</span>
</span><span class='line'>    <span class="n">mode</span> <span class="mo">0400</span>
</span><span class='line'>    <span class="n">owner</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="n">cookbook_file</span> <span class="s1">&#39;/tmp/deploy_ssh_wrapper&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">source</span> <span class="s1">&#39;deploy_ssh_wrapper&#39;</span>
</span><span class='line'>    <span class="n">mode</span> <span class="mo">0500</span>
</span><span class='line'>    <span class="n">owner</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># provisions deploy directory with app user permissions</span>
</span><span class='line'>  <span class="n">directory</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">deploy_path</span>  <span class="k">do</span>
</span><span class='line'>    <span class="n">owner</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">group</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># provisions log directory with app user permissions</span>
</span><span class='line'>  <span class="n">directory</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">log_path</span>  <span class="k">do</span>
</span><span class='line'>    <span class="n">owner</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">group</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># provisions git repository</span>
</span><span class='line'>  <span class="n">git</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">deploy_path</span>  <span class="k">do</span>
</span><span class='line'>    <span class="n">repository</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">repository</span>
</span><span class='line'>    <span class="n">reference</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">reference</span>
</span><span class='line'>    <span class="n">user</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">group</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">ssh_wrapper</span> <span class="s1">&#39;/tmp/deploy_ssh_wrapper&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># provisions npm application dependencies</span>
</span><span class='line'>  <span class="n">execute</span> <span class="s1">&#39;npm install&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">cwd</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">deploy_path</span>
</span><span class='line'>    <span class="n">command</span> <span class="s1">&#39;/usr/local/bin/npm install&#39;</span>
</span><span class='line'>    <span class="n">user</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">group</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">env</span> <span class="s1">&#39;HOME&#39;</span> <span class="o">=&gt;</span> <span class="s2">&quot;/home/</span><span class="si">#{</span><span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># provisions bower application dependencies</span>
</span><span class='line'>  <span class="n">execute</span> <span class="s1">&#39;bower install&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">cwd</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">deploy_path</span>
</span><span class='line'>    <span class="n">command</span> <span class="s1">&#39;bower install&#39;</span>
</span><span class='line'>    <span class="n">user</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">group</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">env</span> <span class="s1">&#39;HOME&#39;</span> <span class="o">=&gt;</span> <span class="s2">&quot;/home/</span><span class="si">#{</span><span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># optimizes browser assets</span>
</span><span class='line'>  <span class="n">execute</span> <span class="s1">&#39;grunt optimize&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">cwd</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">deploy_path</span>
</span><span class='line'>    <span class="n">command</span> <span class="s1">&#39;grunt optimize&#39;</span>
</span><span class='line'>    <span class="n">user</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>    <span class="n">group</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">user</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1"># starts marinara service</span>
</span><span class='line'>  <span class="n">service</span> <span class="s1">&#39;marinara&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">action</span> <span class="ss">:start</span>
</span><span class='line'>    <span class="n">provider</span> <span class="ss">Chef</span><span class="p">:</span><span class="ss">:Provider</span><span class="o">::</span><span class="ss">Service</span><span class="p">:</span><span class="ss">:Upstart</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Provision application firewall rule.</strong>To complete the second exit criteria,
I defined a firewall rule in the application recipe to allow traffic on the
specified application port with the upstream HAProxy server as the source.</li>
</ul>


<figure class='code'><figcaption><span>site-cookbooks/marinara/recipes/application.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># provisions firewall rule to support incoming application traffic</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s1">&#39;simple_iptables&#39;</span>
</span><span class='line'><span class="n">server</span> <span class="o">=</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">proxy</span><span class="o">.</span><span class="n">server</span>
</span><span class='line'><span class="n">port</span> <span class="o">=</span> <span class="n">node</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">application</span><span class="o">.</span><span class="n">port</span>
</span><span class='line'><span class="n">simple_iptables_rule</span> <span class="s1">&#39;application&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rule</span> <span class="s2">&quot;-p tcp -s </span><span class="si">#{</span><span class="n">server</span><span class="si">}</span><span class="s2"> --dport </span><span class="si">#{</span><span class="n">port</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">jump</span> <span class="s1">&#39;ACCEPT&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Implement Chef Proxy Recipe</h2>

<p>To scale the application servers horizontally with the growth of product
usage, I implemented a Chef recipe to install and configure HAProxy. This
recipe leveraged the <a href="https://github.com/opscode-cookbooks/haproxy">haproxy</a> cookbook for most of the heavy lifting.
However, I had to <em>reopen</em> the template resource defined in that cookbook
to use my configuration template instead. The code snippet below demonstrates
this. In addition to providing custom configuration that references
deployed application servers, I implemented a firewall rule to accept traffic
on port 80 (the default value for the incoming_port attribute). In a future
week, I intend to tune HAProxy&rsquo;s configuration based on performance testing.</p>

<figure class='code'><figcaption><span>site-cookbooks/marinara/attributes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># includes default haproxy cookbook attributes first to override</span>
</span><span class='line'><span class="n">include_attribute</span> <span class="s1">&#39;haproxy&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># defines haproxy configuration</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">haproxy</span><span class="o">.</span><span class="n">install_method</span> <span class="o">=</span> <span class="s1">&#39;source&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">haproxy</span><span class="o">.</span><span class="n">source</span><span class="o">.</span><span class="n">version</span> <span class="o">=</span> <span class="s1">&#39;1.5-dev17&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">haproxy</span><span class="o">.</span><span class="n">source</span><span class="o">.</span><span class="n">url</span> <span class="o">=</span> <span class="s1">&#39;http://haproxy.1wt.eu/download/1.5/src/devel/haproxy-1.5-dev17.tar.gz&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">haproxy</span><span class="o">.</span><span class="n">source</span><span class="o">.</span><span class="n">checksum</span> <span class="o">=</span> <span class="s1">&#39;b8deab9989e6b9925410b0bc44dd4353&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">marinara</span><span class="o">.</span><span class="n">proxy</span><span class="o">.</span><span class="n">server</span> <span class="o">=</span> <span class="s1">&#39;127.0.0.1&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>site-cookbooks/marinara/recipes/proxy.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># provisions haproxy</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s1">&#39;haproxy&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># overrides haproxy cookbook default configuration</span>
</span><span class='line'><span class="n">template</span> <span class="o">=</span> <span class="n">resources</span><span class="p">(</span><span class="s1">&#39;template[/etc/haproxy/haproxy.cfg]&#39;</span><span class="p">)</span>
</span><span class='line'><span class="n">template</span><span class="o">.</span><span class="n">source</span> <span class="s1">&#39;haproxy.cfg.erb&#39;</span>
</span><span class='line'><span class="n">template</span><span class="o">.</span><span class="n">cookbook</span> <span class="s1">&#39;marinara&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># provisions firewall rule to support incoming http traffic</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s1">&#39;simple_iptables&#39;</span>
</span><span class='line'><span class="n">simple_iptables_rule</span> <span class="s1">&#39;proxy&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rule</span> <span class="s2">&quot;-p tcp --dport </span><span class="si">#{</span><span class="n">node</span><span class="o">.</span><span class="n">haproxy</span><span class="o">.</span><span class="n">incoming_port</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'>  <span class="n">jump</span> <span class="s1">&#39;ACCEPT&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>site-cookbooks/marinara/templates/default/haproxy.cfg.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">global</span>
</span><span class='line'>  <span class="n">log</span> <span class="mi">127</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">1</span> <span class="n">local0</span>
</span><span class='line'>  <span class="n">maxconn</span> <span class="mi">4096</span>
</span><span class='line'>  <span class="n">user</span> <span class="n">haproxy</span>
</span><span class='line'>  <span class="n">group</span> <span class="n">haproxy</span>
</span><span class='line'>
</span><span class='line'><span class="n">defaults</span>
</span><span class='line'>  <span class="n">log</span> <span class="n">global</span>
</span><span class='line'>  <span class="n">mode</span> <span class="n">http</span>
</span><span class='line'>  <span class="n">option</span> <span class="n">httplog</span>
</span><span class='line'>  <span class="n">option</span> <span class="n">dontlognull</span>
</span><span class='line'>  <span class="n">option</span> <span class="n">redispatch</span>
</span><span class='line'>  <span class="n">option</span> <span class="n">forwardfor</span>
</span><span class='line'>  <span class="n">timeout</span> <span class="n">connect</span> <span class="mi">5</span><span class="n">s</span>
</span><span class='line'>  <span class="n">timeout</span> <span class="n">client</span> <span class="mi">50</span><span class="n">s</span>
</span><span class='line'>  <span class="n">timeout</span> <span class="n">server</span> <span class="mi">50</span><span class="n">s</span>
</span><span class='line'>  <span class="n">balance</span> <span class="o">&lt;</span><span class="sx">%= node.haproxy.balance_algorithm %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sx">frontend http</span>
</span><span class='line'><span class="sx">  bind 0.0.0.0:&lt;%=</span> <span class="n">node</span><span class="o">.</span><span class="n">haproxy</span><span class="o">.</span><span class="n">incoming_port</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  default_backend application</span>
</span><span class='line'>
</span><span class='line'><span class="sx">backend application</span>
</span><span class='line'><span class="sx">  &lt;% node.marinara.application.servers.each_pair do |name, addr| -%&gt;</span>
</span><span class='line'>  <span class="n">server</span> <span class="o">&lt;</span><span class="sx">%= name %&gt; &lt;%=</span> <span class="n">addr</span> <span class="sx">%&gt;:&lt;%= node.marinara.application.port %&gt;</span> <span class="n">check</span>
</span><span class='line'>  <span class="o">&lt;</span><span class="sx">% end </span><span class="o">-%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Test with Multi-Machine Vagrant Environment</h2>

<p>To finish off the week, I created a <em>Vagrantfile</em> in the <em>marinara-kitchen</em>
repository that creates three virtual machines using VirtualBox. Specifically,
I created a definition for the HAProxy server and a definition for the
Node.js application servers running on a private network so they could
communicate with one another. Here is the configuration below using the new
Vagrant 1.1 syntax:</p>

<figure class='code'><figcaption><span>Vagrantfile </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">app_servers</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>  <span class="ss">app0</span><span class="p">:</span> <span class="s1">&#39;10.0.5.3&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="ss">app1</span><span class="p">:</span> <span class="s1">&#39;10.0.5.4&#39;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s1">&#39;2&#39;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s1">&#39;precise64-chef11.2&#39;</span>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s1">&#39;https://opscode-vm.s3.amazonaws.com/vagrant/opscode_ubuntu-12.04_chef-11.2.0.box&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provider</span> <span class="ss">:virtualbox</span> <span class="k">do</span> <span class="o">|</span><span class="n">vb</span><span class="o">|</span>
</span><span class='line'>    <span class="n">vb</span><span class="o">.</span><span class="n">customize</span> <span class="o">[</span><span class="s1">&#39;setextradata&#39;</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="s1">&#39;VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root&#39;</span><span class="p">,</span> <span class="s1">&#39;1&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">ssh</span><span class="o">.</span><span class="n">forward_agent</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="ss">:proxy</span> <span class="k">do</span> <span class="o">|</span><span class="n">proxy</span><span class="o">|</span>
</span><span class='line'>    <span class="n">proxy</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s1">&#39;10.0.5.2&#39;</span>
</span><span class='line'>    <span class="n">proxy</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:chef_solo</span> <span class="k">do</span> <span class="o">|</span><span class="n">chef</span><span class="o">|</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">cookbooks_path</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;cookbooks&#39;</span><span class="p">,</span> <span class="s1">&#39;site-cookbooks&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">data_bags_path</span> <span class="o">=</span> <span class="s1">&#39;data_bags&#39;</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::default&#39;</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::security&#39;</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::proxy&#39;</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>        <span class="ss">marinara</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">application</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="ss">servers</span><span class="p">:</span> <span class="n">app_servers</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">app_servers</span><span class="o">.</span><span class="n">each_pair</span> <span class="k">do</span> <span class="o">|</span><span class="nb">name</span><span class="p">,</span> <span class="n">ip</span><span class="o">|</span>
</span><span class='line'>    <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">define</span> <span class="ss">:&quot;</span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="ss">&quot;</span> <span class="k">do</span> <span class="o">|</span><span class="n">app</span><span class="o">|</span>
</span><span class='line'>      <span class="n">app</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="n">ip</span>
</span><span class='line'>      <span class="n">app</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:chef_solo</span> <span class="k">do</span> <span class="o">|</span><span class="n">chef</span><span class="o">|</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">cookbooks_path</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;cookbooks&#39;</span><span class="p">,</span> <span class="s1">&#39;site-cookbooks&#39;</span><span class="o">]</span>
</span><span class='line'>      <span class="n">chef</span><span class="o">.</span><span class="n">data_bags_path</span> <span class="o">=</span> <span class="s1">&#39;data_bags&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::default&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::security&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">add_recipe</span> <span class="s1">&#39;marinara::application&#39;</span>
</span><span class='line'>        <span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class='line'>          <span class="ss">marinara</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>            <span class="ss">application</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="ss">reference</span><span class="p">:</span> <span class="s1">&#39;develop&#39;</span>
</span><span class='line'>            <span class="p">},</span>
</span><span class='line'>            <span class="ss">proxy</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>              <span class="ss">server</span><span class="p">:</span> <span class="s1">&#39;10.0.5.2&#39;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>  With the Vagrantfile implemented, I brought the servers up and
  executed a quick test with curl against my endpoints. With a successful
  response, the fourth criteria had been met and the week&rsquo;s task complete.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ vagrant up
</span><span class='line'>$ curl http://10.0.5.2/
</span><span class='line'>$ curl http://10.0.5.2/api/hello</span></code></pre></td></tr></table></div></figure>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automate Provisioning of Secure Servers]]></title>
    <link href="http://smdahlen.github.com/blog/2013/03/06/automate-provisioning-of-secure-servers/"/>
    <updated>2013-03-06T10:43:00-05:00</updated>
    <id>http://smdahlen.github.com/blog/2013/03/06/automate-provisioning-of-secure-servers</id>
    <content type="html"><![CDATA[<p>With the <a href="http://shawn.dahlen.me/blog/2013/03/05/prepare-business-operations/">startup plan</a> in place, I spent the first week focusing on
provisioning servers with a cloud provider. Specifically, I intended to
leverage a solution such as Puppet or Chef to automate the setup and
configuration of a server within the <a href="https://www.digitalocean.com">Digital Ocean</a> cloud hosting service
following a few security best practices. Before starting each week&rsquo;s
objective, I will be clarifying the business value and exit criteria to help
keep the end in mind.</p>

<!-- more -->


<h2>Value and Exit Criteria</h2>

<p>This first task will yield a decrease in operational cost and time to market.
Instead of manually creating new servers through a set of procedures for each
environment (development, test, production), the output of this effort will
provide the scaffolding to rebuild an environment within minutes while
maintaining quality through solid configuration management practices.</p>

<p>To complete the task, two criteria had to be met:</p>

<ul>
<li>Create and destroy server instances on the Digital Ocean cloud hosting
service via the command line</li>
<li>Implement a Chef <a href="http://docs.opscode.com/essentials_cookbooks.html">cookbook</a> to configure a server with a set of standard
security practices</li>
</ul>


<h2>Why Digital Ocean and Chef?</h2>

<p>While Amazon AWS is the big name in the cloud hosting space, I opted for
Digital Ocean for its prices, solid state drives, simplicity, and initimate
customer support. Given that my storage requirements will be small and that
subscriber growth should be reasonably predictable, a VPS offering better
price for performance made sense. There are a few things missing that I hope
to see soon: 1) an API for DNS mangement and 2) a HA load balancing solution.</p>

<p>I came to the decision to use Chef based on my experiences with Puppet at my
former company. Specifically, it became a challenge to leverage and baseline
modules developed by third-parties within our infrastrcture. While both products
are great (I would recommend both), I felt that Chef and its community were
pushing the envelope on reuse of infrastructure code with its data-driven
approach (attributes, data bags) and package management solutions
(<a href="https://github.com/applicationsonline/librarian">librarian</a> and <a href="http://berkshelf.com">berkshelf</a>). In the next section, I&rsquo;ll demonstrate this
reuse.</p>

<p>In addition to selecting Chef, I also made the decision to use Chef Solo vs
Chef Server. A large part of the decision had to do with keeping things simple.
With the open source project, <a href="http://matschaffer.github.com/knife-solo/">knife-solo</a>, I was able to meet my exit
criteria while still benefiting from 90% of Chef&rsquo;s features.</p>

<h2>Provisioning a Secure Server</h2>

<p>Below is the step-by-step guide to provision a secure server within Digital
Ocean using Chef:</p>

<ul>
<li><strong>Install ruby gems.</strong> To get started, I installed two gem packages that
 provide plugins to the Chef <a href="http://docs.opscode.com/knife.html">knife</a> command-line tool. knife-solo
 supports the provisioning of Chef cookbooks to a single server from a
 workstation. <a href="https://github.com/rmoriz/knife-digital_ocean">knife-digital_ocean</a> provides a wrapper around Digital
 Ocean&rsquo;s API to create and destroy server instances. I added these gems
 to my Gemfile in my <a href="https://github.com/smdahlen/mac-bootstrap">mac bootstrap</a> project, but you could install
 them directly:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem install knife-solo knife-digital_ocean</span></code></pre></td></tr></table></div></figure>


<p>   <em>Note</em>: I ran into <a href="https://github.com/matschaffer/knife-solo/issues/177">issue 177</a> when using knife-solo. To resolve, I
   used version 0.3.0.pre2 (instead of 0.2.0).</p>

<ul>
<li><strong>Create the Chef project repository.</strong> With the gems installed, I created
 a new Chef repository (also known as a kitchen) that will contain configuration
 data and code to provision multiple servers comprising the product. The product
 has a tentative name, Marinara, so I will be using that throughout the rest of the
 article. I initialized the repository to use librarian so I could easily
 reference and use third-party cookbooks.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife solo init --librarian marinara-kitchen</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Initialize git repository and setup development branch.</strong> It is a good practice
 to use version control with your Chef repository. With the decision to use Chef
 Solo, I am unable to use the <a href="http://docs.opscode.com/essentials_environments.html">environments</a> capability of Chef Server which
 allows an operator to pin cookbook versions to a specific environment. However,
 using a git branching strategy like the one discussed at <a href="http://nvie.com/posts/a-successful-git-branching-model/">nvie.com</a>,
 environments can be represented as long-running git branches with varying
 cookbook versions defined in the Cheffile (more on that in a bit). An operator
 can simply checkout a git reference (tag or branch) to build an environment.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd marinara-kitchen
</span><span class='line'>$ git init
</span><span class='line'>$ git add .
</span><span class='line'>$ git commit -m 'initial commit'
</span><span class='line'>$ git checkout -b develop</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Setup knife configuration for Digital Ocean.</strong> With the Chef repository created
 and under version control, I provided API credentials to communicate with the
 Digital Ocean service in my <em>knife.rb</em> file located at <em>marinara-kitchen/.chef/</em>.
 These credentials may be found within the <em>My Settings > API Access</em> section of
 the Digital Ocean dashboard.</li>
</ul>


<figure class='code'><figcaption><span>knife.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">knife</span><span class="o">[</span><span class="ss">:digital_ocean_client_id</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;xxxxxxxxxxxxxxxxxxxxx&#39;</span>
</span><span class='line'><span class="n">knife</span><span class="o">[</span><span class="ss">:digital_ocean_api_key</span><span class="o">]</span>   <span class="o">=</span> <span class="s1">&#39;yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Upload your ssh public key on Digital Ocean dashboard.</strong> To create servers
 that do not require a root password, I uploaded my workstation&rsquo;s ssh public key
 within the <em>SSH Keys</em> section of the Digital Ocean dashboard. Once uploaded,
 I ran the following command (within the repository directory) to retrieve the ID
 of the ssh key to be used in the next step:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife digital_ocean sshkey list</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Create a new server and create a DNS A record.</strong> With the knife configuration
 in place and the ssh key ID at hand, I was ready to create a new server (known
 as a droplet) on Digital Ocean via the command line. The command below creates
 a new Ubuntu 12.10 server with 512MB of RAM, 1 CPU, and a 20 GB SSD drive within
 the New York region using my public ssh key for access. Upon success, the
 command yields an IP address that I used to create a A record for
 <em>mycompany.com</em> in the Digital Ocean dashboard. Finally, I could shell into the
 new server.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife digital_ocean droplet create --server-name ops --image 25489 \
</span><span class='line'>    --size 66 --location 1 --ssh-keys 4444
</span><span class='line'>$ ssh root@mycompany.com</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Create an application cookbook.</strong> With the first exit criteria met, I created
a new application cookbook that would define recipes configuring the product&rsquo;s
servers. By default, librarian manages third-party cookbooks in the <em>cookbooks</em>
directory so I created the <em>marinara</em> cookbook within the <em>site-cookbooks</em>
directory.</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife cookbook create -o ./site-cookbooks marinara</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Install base packages.</strong> I use vim, git, and tmux on a regular basis and wanted
these packages installed on all servers. I defined a default attribute within the
cookbook referencing an array of packages to install. Within the default recipe (
all configuration will be placed here to simplify the article), I loop over this
array (that may be redefined on a server by server basis) to install the packages.</li>
</ul>


<figure class='code'><figcaption><span>site-cookbooks/marinara/attributes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># defines base packages</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">packages</span> <span class="o">=</span> <span class="sx">%w(vim git tmux)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>site-cookbooks/marinara/recipes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># provisions base packages for a node</span>
</span><span class='line'><span class="n">node</span><span class="o">.</span><span class="n">packages</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">pkg</span><span class="o">|</span>
</span><span class='line'>  <span class="n">package</span> <span class="n">pkg</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><p><strong>Add administrator accounts and their associated dotfiles.</strong> System
administration should not be conducted using the root account. Each administrator
should use their own account and password invoking all commands with sudo for
audit purposes. To add administrator accounts, I leveraged the <a href="https://github.com/fnichol/chef-user">chef-user</a>
cookbook. This cookbook looks at the node attribute, <em>users</em>, which
subsequently references users within the <em>users</em> data bag, to create new
accounts. For administrators with dotfiles managed with <a href="https://github.com/technicalpickles/homesick">homesick</a>, they
would be deployed using the <a href="https://github.com/fnichol/chef-homesick">chef-homesick</a> cookbook. These third-party
cookbooks are referenced in two places: 1) the <em>Cheffile</em> at the root of the
repository, and 2) the <em>metadata.rb</em> file at the root of the application cookbook.</p>

<p>For each administrator account, the ssh public key is provisioned, the
hashed password is set (using mkpasswd -m sha-512), and it is added to the sudo
admin group.</p></li>
</ul>


<figure class='code'><figcaption><span>./data_bags/users/shawn.json </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;id&quot;</span><span class="o">:</span> <span class="s2">&quot;shawn&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;password&quot;</span><span class="o">:</span> <span class="s2">&quot;xxx&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;groups&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;sudo&quot;</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="s2">&quot;ssh_keys&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;public key here&quot;</span>
</span><span class='line'>    <span class="p">],</span>
</span><span class='line'>    <span class="s2">&quot;homesick_castles&quot;</span><span class="o">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="p">{</span>
</span><span class='line'>            <span class="s2">&quot;name&quot;</span><span class="o">:</span> <span class="s2">&quot;dotfiles&quot;</span><span class="p">,</span>
</span><span class='line'>            <span class="s2">&quot;source&quot;</span><span class="o">:</span> <span class="s2">&quot;git://github.com/smdahlen/dotfiles.git&quot;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>./site-cookbooks/marinara/metadata.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">depends</span> <span class="s1">&#39;user&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.3.0&#39;</span>
</span><span class='line'><span class="n">depends</span> <span class="s1">&#39;homesick&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.3.2&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>./site-cookbooks/marinara/attributes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># defines user accounts and overriden user cookbook attributes</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">users</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;shawn&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">user</span><span class="o">.</span><span class="n">ssh_keygen</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>./site-cookbooks/marinara/recipes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># provisions user accounts and their dotfiles defined in a data bag</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s1">&#39;user::data_bag&#39;</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s1">&#39;homesick::data_bag&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Restrict ssh access.</strong> With the adminstrator accounts provisioned, it was time
to tighten access to ssh by not permitting root login and disabling password
authentication. This was accomplished by leveraging the <a href="https://github.com/opscode-cookbooks/openssh">openssh</a> cookbook
and defining the appropriate default attributes.</li>
</ul>


<figure class='code'><figcaption><span>./site-cookbooks/marinara/metadata.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">depends</span> <span class="s1">&#39;openssh&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.1.4&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>./site-cookbooks/marinara/attributes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># defines sshd configuration that differ from /etc/ssh/sshd_config defaults</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">openssh</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">permit_root_login</span> <span class="o">=</span> <span class="s1">&#39;no&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">openssh</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">password_authentication</span> <span class="o">=</span> <span class="s1">&#39;no&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">openssh</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">allow_groups</span> <span class="o">=</span> <span class="s1">&#39;sudo&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">openssh</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">login_grace_time</span> <span class="o">=</span> <span class="s1">&#39;30&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">openssh</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">use_p_a_m</span> <span class="o">=</span> <span class="s1">&#39;no&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">openssh</span><span class="o">.</span><span class="n">server</span><span class="o">.</span><span class="n">print_motd</span> <span class="o">=</span> <span class="s1">&#39;no&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>./site-cookbooks/marinara/recipes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># provisions ssh configured for no password auth and root login</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s1">&#39;openssh&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Setup notifications for package updates.</strong> Another security best practice is
 to ensure that security updates are applied in a timely manner. While I could
 have setup automatic updates, this would inevitably lead to issues in production.
 It is best to try updates within a test environment first so I opted to receive
 daily email notifications instead. I setup <em>ssmtp</em> to relay mail through a
 smarthost (in my case, <a href="http://www.mailgun.com/">Mailgun</a>). My recipe loads smarthost configuration
 from a data bag and passes it to a template to create the ssmtp.conf file. The
 package notifications are delivered using the <a href="http://www.debian-administration.org/articles/491">apticron</a> tool.</li>
</ul>


<figure class='code'><figcaption><span>./data_bags/smarthosts/mailgun.json </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="s2">&quot;id&quot;</span><span class="o">:</span> <span class="s2">&quot;mailgun&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;host&quot;</span><span class="o">:</span> <span class="s2">&quot;smtp.mailgun.org&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;port&quot;</span><span class="o">:</span> <span class="s2">&quot;587&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;username&quot;</span><span class="o">:</span> <span class="s2">&quot;postmaster@mycompany.com&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;password&quot;</span><span class="o">:</span> <span class="s2">&quot;xxx&quot;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>./site-cookbooks/marinara/attributes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># defines smtp relay configuration</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">smtp</span><span class="o">.</span><span class="n">smarthost</span> <span class="o">=</span> <span class="s1">&#39;mailgun&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">smtp</span><span class="o">.</span><span class="n">rewrite_domain</span> <span class="o">=</span> <span class="s1">&#39;mycompany.com&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># defines apitcron configuration</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">apticron</span><span class="o">.</span><span class="n">email</span> <span class="o">=</span> <span class="s1">&#39;ops@mycompany.com&#39;</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">apticron</span><span class="o">.</span><span class="n">diff_only</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'><span class="n">default</span><span class="o">.</span><span class="n">apticron</span><span class="o">.</span><span class="n">notify_no_updates</span> <span class="o">=</span> <span class="kp">false</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>./site-cookbooks/marinara/recipes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># provisions ssmtp configured for a smarthost defined in a data bag</span>
</span><span class='line'><span class="c1"># TODO: use encrypted data bag for smarthost credentials</span>
</span><span class='line'><span class="n">smarthost</span> <span class="o">=</span> <span class="n">data_bag_item</span><span class="p">(</span><span class="ss">:smarthosts</span><span class="p">,</span> <span class="n">node</span><span class="o">.</span><span class="n">smtp</span><span class="o">.</span><span class="n">smarthost</span><span class="p">)</span>
</span><span class='line'><span class="k">unless</span> <span class="n">smarthost</span><span class="o">.</span><span class="n">nil?</span>
</span><span class='line'>  <span class="n">package</span> <span class="s1">&#39;ssmtp&#39;</span>
</span><span class='line'>  <span class="n">template</span> <span class="s1">&#39;/etc/ssmtp/ssmtp.conf&#39;</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">source</span> <span class="s1">&#39;ssmtp.conf.erb&#39;</span>
</span><span class='line'>    <span class="n">owner</span> <span class="s1">&#39;root&#39;</span>
</span><span class='line'>    <span class="n">group</span> <span class="s1">&#39;root&#39;</span>
</span><span class='line'>    <span class="n">mode</span> <span class="s1">&#39;0644&#39;</span>
</span><span class='line'>    <span class="n">variables</span><span class="p">(</span>
</span><span class='line'>      <span class="ss">smarthost</span><span class="p">:</span> <span class="n">smarthost</span><span class="p">,</span>
</span><span class='line'>      <span class="ss">domain</span><span class="p">:</span> <span class="n">node</span><span class="o">.</span><span class="n">smtp</span><span class="o">.</span><span class="n">rewrite_domain</span>
</span><span class='line'>    <span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># provisions apticron for package update notifications</span>
</span><span class='line'><span class="n">package</span> <span class="s1">&#39;apticron&#39;</span>
</span><span class='line'><span class="n">template</span> <span class="s1">&#39;/etc/apticron/apticron.conf&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">source</span> <span class="s1">&#39;apticron.conf.erb&#39;</span>
</span><span class='line'>  <span class="n">owner</span> <span class="s1">&#39;root&#39;</span>
</span><span class='line'>  <span class="n">group</span> <span class="s1">&#39;root&#39;</span>
</span><span class='line'>  <span class="n">mode</span> <span class="s1">&#39;0644&#39;</span>
</span><span class='line'>  <span class="n">variables</span><span class="p">(</span>
</span><span class='line'>    <span class="ss">email</span><span class="p">:</span> <span class="n">node</span><span class="o">.</span><span class="n">apticron</span><span class="o">.</span><span class="n">email</span><span class="p">,</span>
</span><span class='line'>    <span class="n">diff_only</span><span class="p">:</span> <span class="n">node</span><span class="o">.</span><span class="n">apticron</span><span class="o">.</span><span class="n">diff_only</span><span class="p">,</span>
</span><span class='line'>    <span class="n">notify_no_updates</span><span class="p">:</span> <span class="n">node</span><span class="o">.</span><span class="n">apticron</span><span class="o">.</span><span class="n">notify_no_updates</span>
</span><span class='line'>  <span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Setup a restrictive firewall.</strong> The final step to configuring the server was to
setup a restrictive firewall denying all inbound traffic except ssh. I set the
INPUT chain policy for iptables to DENY and created a custom chain for my
server rules. The rules were defined using a Chef <a href="http://docs.opscode.com/lwrp.html">LWRP</a> from the
<a href="https://github.com/dcrosta/cookbook-simple-iptables">simple-iptables</a> cookbook.</li>
</ul>


<figure class='code'><figcaption><span>./site-cookbooks/marinara/metadata.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">depends</span> <span class="s1">&#39;simple_iptables&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 0.2.4&#39;</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>./site-cookbooks/marinara/recipes/default.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1"># provisions iptables firewall rules restricting all ports except ssh</span>
</span><span class='line'><span class="n">include_recipe</span> <span class="s1">&#39;simple_iptables&#39;</span>
</span><span class='line'><span class="n">simple_iptables_policy</span> <span class="s1">&#39;INPUT&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">policy</span> <span class="s1">&#39;DROP&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">simple_iptables_rule</span> <span class="s1">&#39;system&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rule</span> <span class="s1">&#39;-i lo&#39;</span>
</span><span class='line'>  <span class="n">jump</span> <span class="s1">&#39;ACCEPT&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">simple_iptables_rule</span> <span class="s1">&#39;system&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rule</span> <span class="s1">&#39;-m conntrack --ctstate ESTABLISHED,RELATED&#39;</span>
</span><span class='line'>  <span class="n">jump</span> <span class="s1">&#39;ACCEPT&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">simple_iptables_rule</span> <span class="s1">&#39;system&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rule</span> <span class="s1">&#39;-p icmp&#39;</span>
</span><span class='line'>  <span class="n">jump</span> <span class="s1">&#39;ACCEPT&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">simple_iptables_rule</span> <span class="s1">&#39;system&#39;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">rule</span> <span class="s1">&#39;-p tcp --dport ssh&#39;</span>
</span><span class='line'>  <span class="n">jump</span> <span class="s1">&#39;ACCEPT&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Bootstrap the server.</strong> With the basic application cookbook complete, all that
was left was to tell Chef to apply the default cookbook recipe to the
<em>mycompany.com</em> server. This was accomplished by defining a run list for the node:</li>
</ul>


<figure class='code'><figcaption><span>./nodes/mycompany.com.json </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;run_list&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>        <span class="s2">&quot;recipe[marinara]&quot;</span>
</span><span class='line'>    <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>  Finally, I could bootstrap the server with the configuration code defined above
  with the following command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ knife solo bootstrap root@mycompany.com</span></code></pre></td></tr></table></div></figure>


<p>  With that, the second exit criteria had been met.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prepare Business Operations]]></title>
    <link href="http://smdahlen.github.com/blog/2013/03/05/prepare-business-operations/"/>
    <updated>2013-03-05T13:41:00-05:00</updated>
    <id>http://smdahlen.github.com/blog/2013/03/05/prepare-business-operations</id>
    <content type="html"><![CDATA[<p>With my <a href="http://shawn.dahlen.me/blog/2013/02/25/shifting-my-attention/">attention</a>
now focused on the startup, I spent this week bootstrapping the business. The
objective was to establish a project plan achievable within thirty weeks while
preparing technical and financial operations. Before I dive into the
particulars of the schedule, let me provide a look into what I will be working on.</p>

<!-- more -->


<h2>The Product</h2>

<p>Before I made the leap, I had several ideas worth pursuing. Most were mid to large
in size. I would have had to create a working prototype over the thirty week
time period and raise venture capital to take it to the next step. Instead, I
decided to focus on a niche and implement a full solution within the same timeframe
with the mid-term objective of generating semi-passive income that could seed
bigger ideas.</p>

<p>The niche I will be targeting is a task management app that provides first-class
support for the <a href="http://www.pomodorotechnique.com/">Pomodoro Technique</a>. Why you ask? First and foremost, it scratches my own itch. As Paul Graham penned in
<a href="http://www.paulgraham.com/startupideas.html">How To Get Startup Ideas</a>, the best
ideas are ones in which the founders themselves want and can build. While
there exists many first-class task management solutions, none provide rich support
for arguably one of the most <a href="http://lifehacker.com/5890129/five-best-productivity-methods">popular productivity methods</a>. I will initially launch with a web-based
interface and follow with iOS and Android versions pending traction of the
product. More information will follow regarding the product, its features, and
user experience in several weeks.</p>

<h2>The Plan</h2>

<p>The plan is simple. I have divided the thirty weeks into five sprints each
with a specific work package (objective). The work package is further decomposed
into six tasks that are approximately one week of effort each. This approach
afforded me a clear weekly focus that I could subsequently share with you.</p>

<p>I opted to tackle the product architecture first versus the typical approach of
defining product requirements. I felt that more risk existed with the product
architecture since I had not operated systems on the Internet before while the
base requirements are already well-defined within the Pomodoro Technique
<a href="http://www.pomodorotechnique.com/download/pdf/ThePomodoroTechnique_v1-3.pdf">book</a>.</p>

<p>With the current plan, I intend to launch the product in early October (accounting
for some vacation time with my family).</p>

<p><strong>Sprints</strong></p>

<ol>
<li>Define and prototype the product architecture

<ul>
<li>Week 1: Automate provisioning of secure servers</li>
<li>Week 2: Setup Node.js servers within a load-balanced configuration</li>
<li>Week 3: Setup a MongoDb database cluster</li>
<li>Week 4: Setup an automated functional testing framework</li>
<li>Week 5: Setup a performance testing framework</li>
<li>Week 6: Setup a monitoring and backup strategy</li>
</ul>
</li>
<li>Define product user experience

<ul>
<li>Week 7: Draft personas, goals, and feature requirements</li>
<li>Week 8: Draft paper storyboards</li>
<li>Week 9: Establish a visual design</li>
<li>Week 10: Draft design compositions for time and inventory features</li>
<li>Week 11: Draft design compositions for reporting and gameplay features</li>
<li>Week 12: Draft design compositions for registration and payment features</li>
</ul>
</li>
<li>Implement registration, time, and inventory features</li>
<li>Implement reporting, gameplay, and payment features</li>
<li>Conduct testing and draft marketing plan</li>
</ol>


<h2>Other Activities</h2>

<p>Beyond defining the schedule and the associated research required to scope it, I
tackled a few other activities in preparation for week one kickoff:</p>

<ul>
<li>I incorporated my business, tenatively named <em>Whimsical Bits, Ltd.</em>, through
<a href="http://www.rocketlawyer.com/">Rocket Lawyer</a> and drafted my LLC Operating
Agreement.</li>
<li>I implemented a <a href="https://github.com/smdahlen/mac-bootstrap">script</a> to bootstrap
my mac for software development that includes setup of homebrew, vim, irssi,
rbenv, and a few ruby gems (which I will discuss next week). Additionally, I
refined my personal <a href="https://github.com/smdahlen/dotfiles">dotfiles</a> that
intend to push to all servers I work on.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shifting My Attention]]></title>
    <link href="http://smdahlen.github.com/blog/2013/02/25/shifting-my-attention/"/>
    <updated>2013-02-25T12:35:00-05:00</updated>
    <id>http://smdahlen.github.com/blog/2013/02/25/shifting-my-attention</id>
    <content type="html"><![CDATA[<p>After ten years working at Lockeed Martin I decided to leave my job and
and pursue a startup. The decision did not come easy. I left behind
colleagues, mentors, and leaders who had become my extended family. With
their trust and support, I have grown tremendously as a professional improving
my technical, mangerial, and leadership skills. However, a growing sense
of dissatisfaction had crept into my life which are attributed to learning
a few lessons during this period.</p>

<!-- more -->


<h2>Lessons</h2>

<ol>
<li><p><em>Money and achievements do not bring lasting satisfaction.</em>
I had the fortune to receive an excellent college education and a job
opportunity right out of school. I worked hard and took advantage of the
increasing levels of responsibility offered to me. In return my salary
grew threefold and I notched many project successes and promotions on my
belt. However, much like buying a new toy, earning more money or receiving
the next promotion offered fleeting happiness. I found that if your sense of
worth becomes too closely tied to your career, it can consume your attention
leaving an insatiable thirst for more.</p></li>
<li><p><em>Your attention is the most valuable thing you have.</em>
Having your first child is a surefire way to gain perspective! When my son
was born, I became acutely aware of the importance of my attention and how
the quality of time spent with him was directly related to my engagement in
the moment. Conversely, spreading my attention thin was a recipe for
mediocrity and unhappiness. For a while, I tried to do it all: put in long
hours at work, exercise, spend quality time with my wife and son, and tinker
with open source projects. Nothing received my best. It became clear that I
needed to set limits on where I placed my attention so I could increase my
focus on what I valued most &mdash; family and entrepreneurship.</p></li>
<li><p><em>Failure contains the seeds of opportunity.</em>
Since I was a child, I have had a love of learning nurtured by my mother
and an interest for self-employment reflected by my father. I&rsquo;ve desired
to launch my own software business where I had the opportunity to employ
multiple skills including product and project management, design,
engineering, operations, and marketing. However, a semi-concious fear of
failure held me at bay. During my time at Lockheed Martin, that fear
slowly abated. My experiences have shown that project failures could parlay
into future successes and that taking on challenges is the best
avenue for personal growth.</p></li>
</ol>


<p>I discussed these lessons with several colleagues and family members over the
last few years. Actions speak louder than words however, and it is now time to act.
Leaving my job reflects my intention to set limits on the accumulation of wealth
and traditional career advancement to focus on my life goal: <em>Nuture a
healthy, minamalist lifestyle directing attention towards family and
entrepreneurship.</em></p>

<h2>Objectives</h2>

<p>In pursuit of my life goal, I have drafted a few mid-term (3 year) objectives:</p>

<ol>
<li>Establish a balanced exercise, meditation, and nutrtition plan to revitalize
energy and cultivate mindfulness.</li>
<li>Generate semi-passive income covering expenses and savings goals to achieve
financial freedom.</li>
<li>Purchase a new home near family to reconnect and share in the experience of
a new generation growing up.</li>
</ol>


<p>Of these three objectives, my blog will focus on #2. Over the next 30 weeks,
I will share my progress as I look to launch a software service and generate
$10K in revenue by year-end. To keep my focus on the business, I will be
limiting myself to a single entry a week describing the objective,
accomplishments, and lessons learned. I welcome you to check in on Sundays or
subscribe for updates via email or RSS feed.</p>
]]></content>
  </entry>
  
</feed>
